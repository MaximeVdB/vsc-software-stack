# output for command: pytest -n 8 tests

================================================================================= test session starts =================================================================================
platform linux -- Python 3.10.4, pytest-7.1.2, pluggy-1.0.0
rootdir: /tmp/vsc43810/easybuild/build/diceml/0.9/foss-2022a/diceml/dice_ml-0.9
plugins: xdist-2.5.0, forked-1.4.0
gw0 I / gw1 I / gw2 I / gw3 I / gw4 I / gw5 I / gw6 I / gw7 I
gw0 [198] / gw1 [198] / gw2 [198] / gw3 [198] / gw4 [198] / gw5 [198] / gw6 [198] / gw7 [198]

......FFFFFFFF..FFFFs.......EEEEF........E.s...........EEEFEEFEFE.EFEFF...F.E...F.FFFEF..F..F.EFF..EFFFEEFFFEFFEFsFFFFFFF..FFFFFFFFs..F...FFFF.....F.F..FFF....F........FF.F.FF [ 88%]
FFFF.FF.FF............F                                                                                                                                                         [100%]
======================================================================================= ERRORS ========================================================================================
______________________________________________________________________ ERROR collecting tests/test_notebooks.py _______________________________________________________________________
ImportError while importing test module '/tmp/vsc43810/easybuild/build/diceml/0.9/foss-2022a/diceml/dice_ml-0.9/tests/test_notebooks.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
tests/test_notebooks.py:10: in <module>
    import nbformat
E   ModuleNotFoundError: No module named 'nbformat'
___________________________________________________________ ERROR collecting tests/test_dice_interface/test_dice_genetic.py ___________________________________________________________
ImportError while importing test module '/tmp/vsc43810/easybuild/build/diceml/0.9/foss-2022a/diceml/dice_ml-0.9/tests/test_dice_interface/test_dice_genetic.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
tests/test_dice_interface/test_dice_genetic.py:6: in <module>
    from dice_ml.utils.neuralnetworks import FFNetwork
dice_ml/utils/neuralnetworks.py:1: in <module>
    from torch import nn, sigmoid
E   ModuleNotFoundError: No module named 'torch'
___________________________________________________________ ERROR collecting tests/test_dice_interface/test_dice_random.py ____________________________________________________________
ImportError while importing test module '/tmp/vsc43810/easybuild/build/diceml/0.9/foss-2022a/diceml/dice_ml-0.9/tests/test_dice_interface/test_dice_random.py'.
Hint: make sure your test modules/packages have valid Python names.
Traceback:
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
tests/test_dice_interface/test_dice_random.py:4: in <module>
    import torch
E   ModuleNotFoundError: No module named 'torch'
____________________________________ ERROR at setup of TestDiceKDBinaryClassificationMethods.test_KD_tree_counterfactual_explanations_output[0-1] _____________________________________
[gw0] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

    @pytest.fixture()
    def KD_binary_classification_exp_object():
        backend = 'sklearn'
        dataset = helpers.load_custom_testing_dataset()
        d = dice_ml.Data(dataframe=dataset, continuous_features=['Numerical'], outcome_name='Outcome')
        ML_modelpath = helpers.get_custom_dataset_modelpath_pipeline()
        m = dice_ml.Model(model_path=ML_modelpath, backend=backend)
>       exp = dice_ml.Dice(d, m, method='kdtree')

tests/test_dice_interface/test_dice_KD.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
________________________________________ ERROR at setup of TestDiceKDBinaryClassificationMethods.test_features_to_vary[0-1-features_to_vary0] _________________________________________
[gw0] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

    @pytest.fixture()
    def KD_binary_classification_exp_object():
        backend = 'sklearn'
        dataset = helpers.load_custom_testing_dataset()
        d = dice_ml.Data(dataframe=dataset, continuous_features=['Numerical'], outcome_name='Outcome')
        ML_modelpath = helpers.get_custom_dataset_modelpath_pipeline()
        m = dice_ml.Model(model_path=ML_modelpath, backend=backend)
>       exp = dice_ml.Dice(d, m, method='kdtree')

tests/test_dice_interface/test_dice_KD.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
_________________________________________ ERROR at setup of TestDiceKDBinaryClassificationMethods.test_permitted_range[0-1-permitted_range0] __________________________________________
[gw0] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

    @pytest.fixture()
    def KD_binary_classification_exp_object():
        backend = 'sklearn'
        dataset = helpers.load_custom_testing_dataset()
        d = dice_ml.Data(dataframe=dataset, continuous_features=['Numerical'], outcome_name='Outcome')
        ML_modelpath = helpers.get_custom_dataset_modelpath_pipeline()
        m = dice_ml.Model(model_path=ML_modelpath, backend=backend)
>       exp = dice_ml.Dice(d, m, method='kdtree')

tests/test_dice_interface/test_dice_KD.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
___________________________________ ERROR at setup of TestDiceKDBinaryClassificationMethods.test_permitted_range_categorical[0-4-permitted_range0] ____________________________________
[gw0] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

    @pytest.fixture()
    def KD_binary_classification_exp_object():
        backend = 'sklearn'
        dataset = helpers.load_custom_testing_dataset()
        d = dice_ml.Data(dataframe=dataset, continuous_features=['Numerical'], outcome_name='Outcome')
        ML_modelpath = helpers.get_custom_dataset_modelpath_pipeline()
        m = dice_ml.Model(model_path=ML_modelpath, backend=backend)
>       exp = dice_ml.Dice(d, m, method='kdtree')

tests/test_dice_interface/test_dice_KD.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
____________________________________________________ ERROR at setup of TestDiceKDBinaryClassificationMethods.test_duplicates[0-2] _____________________________________________________
[gw0] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

    @pytest.fixture()
    def KD_binary_classification_exp_object():
        backend = 'sklearn'
        dataset = helpers.load_custom_testing_dataset()
        d = dice_ml.Data(dataframe=dataset, continuous_features=['Numerical'], outcome_name='Outcome')
        ML_modelpath = helpers.get_custom_dataset_modelpath_pipeline()
        m = dice_ml.Model(model_path=ML_modelpath, backend=backend)
>       exp = dice_ml.Dice(d, m, method='kdtree')

tests/test_dice_interface/test_dice_KD.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
___________________________________________________ ERROR at setup of TestDiceKDBinaryClassificationMethods.test_index[linear-0-1] ____________________________________________________
[gw0] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

    @pytest.fixture()
    def KD_binary_classification_exp_object():
        backend = 'sklearn'
        dataset = helpers.load_custom_testing_dataset()
        d = dice_ml.Data(dataframe=dataset, continuous_features=['Numerical'], outcome_name='Outcome')
        ML_modelpath = helpers.get_custom_dataset_modelpath_pipeline()
        m = dice_ml.Model(model_path=ML_modelpath, backend=backend)
>       exp = dice_ml.Dice(d, m, method='kdtree')

tests/test_dice_interface/test_dice_KD.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
______________________________________________ ERROR at setup of TestDiceKDBinaryVarsClassificationMethods.test_KD_tree_output[None-0-1] ______________________________________________
[gw4] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

load_custom_vars_testing_dataset =   Categorical  CategoricalNum  Numerical  Outcome
0           a               0         10        0
1           b     ...        14        0
3           a               2         88        0
4           c               1         14        0

    @pytest.fixture()
    def KD_binary_vars_classification_exp_object(load_custom_vars_testing_dataset):
        backend = 'sklearn'
        dataset = load_custom_vars_testing_dataset
        d = dice_ml.Data(dataframe=dataset, continuous_features=['Numerical'], outcome_name='Outcome')
        ML_modelpath = helpers.get_custom_vars_dataset_modelpath_pipeline()
        m = dice_ml.Model(model_path=ML_modelpath, backend=backend)
>       exp = dice_ml.Dice(d, m, method='kdtree')

tests/test_dice_interface/test_dice_KD.py:28: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
___________________________________________________ ERROR at setup of TestDiceKDBinaryClassificationMethods.test_index[binary-0-1] ____________________________________________________
[gw0] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

    @pytest.fixture()
    def KD_binary_classification_exp_object():
        backend = 'sklearn'
        dataset = helpers.load_custom_testing_dataset()
        d = dice_ml.Data(dataframe=dataset, continuous_features=['Numerical'], outcome_name='Outcome')
        ML_modelpath = helpers.get_custom_dataset_modelpath_pipeline()
        m = dice_ml.Model(model_path=ML_modelpath, backend=backend)
>       exp = dice_ml.Dice(d, m, method='kdtree')

tests/test_dice_interface/test_dice_KD.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
____________________________________________________ ERROR at setup of TestDiceKDBinaryClassificationMethods.test_index[None-0-1] _____________________________________________________
[gw0] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

    @pytest.fixture()
    def KD_binary_classification_exp_object():
        backend = 'sklearn'
        dataset = helpers.load_custom_testing_dataset()
        d = dice_ml.Data(dataframe=dataset, continuous_features=['Numerical'], outcome_name='Outcome')
        ML_modelpath = helpers.get_custom_dataset_modelpath_pipeline()
        m = dice_ml.Model(model_path=ML_modelpath, backend=backend)
>       exp = dice_ml.Dice(d, m, method='kdtree')

tests/test_dice_interface/test_dice_KD.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
__________________________________ ERROR at setup of TestDiceKDBinaryVarsClassificationMethods.test_KD_tree_counterfactual_explanations_output[0-1] ___________________________________
[gw4] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

load_custom_vars_testing_dataset =   Categorical  CategoricalNum  Numerical  Outcome
0           a               0         10        0
1           b     ...        14        0
3           a               2         88        0
4           c               1         14        0

    @pytest.fixture()
    def KD_binary_vars_classification_exp_object(load_custom_vars_testing_dataset):
        backend = 'sklearn'
        dataset = load_custom_vars_testing_dataset
        d = dice_ml.Data(dataframe=dataset, continuous_features=['Numerical'], outcome_name='Outcome')
        ML_modelpath = helpers.get_custom_vars_dataset_modelpath_pipeline()
        m = dice_ml.Model(model_path=ML_modelpath, backend=backend)
>       exp = dice_ml.Dice(d, m, method='kdtree')

tests/test_dice_interface/test_dice_KD.py:28: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
_______________________________________________ ERROR at setup of TestDiceKDMultiClassificationMethods.test_KD_tree_output[linear-2-3] ________________________________________________
[gw0] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

    @pytest.fixture()
    def KD_multi_classification_exp_object():
        backend = 'sklearn'
        dataset = helpers.load_custom_testing_dataset_multiclass()
        d = dice_ml.Data(dataframe=dataset, continuous_features=['Numerical'], outcome_name='Outcome')
        ML_modelpath = helpers.get_custom_dataset_modelpath_pipeline_multiclass()
        m = dice_ml.Model(model_path=ML_modelpath, backend=backend)
>       exp = dice_ml.Dice(d, m, method='kdtree')

tests/test_dice_interface/test_dice_KD.py:39: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
___________________________________________________________ ERROR at setup of TestPublicDataMethods.test_feature_precision ____________________________________________________________
[gw1] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

    @pytest.fixture()
    def data_object():
>       dataset = helpers.load_adult_income_dataset()

tests/test_data_interface/test_public_data_interface.py:15: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/utils/helpers.py:25: in load_adult_income_dataset
    raw_data = np.genfromtxt('https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data',
/apps/gent/RHEL8/cascadelake-ib/software/SciPy-bundle/2022.05-foss-2022a/lib/python3.10/site-packages/numpy/lib/npyio.py:1813: in genfromtxt
    fid = np.lib._datasource.open(fname, 'rt', encoding=encoding)
/apps/gent/RHEL8/cascadelake-ib/software/SciPy-bundle/2022.05-foss-2022a/lib/python3.10/site-packages/numpy/lib/_datasource.py:193: in open
    return ds.open(path, mode, encoding=encoding, newline=newline)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <numpy.DataSource object at 0x14d91ab58280>, path = 'https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data', mode = 'rt', encoding = None, newline = None

    def open(self, path, mode='r', encoding=None, newline=None):
        """
        Open and return file-like object.
    
        If `path` is an URL, it will be downloaded, stored in the
        `DataSource` directory and opened from there.
    
        Parameters
        ----------
        path : str
            Local file path or URL to open.
        mode : {'r', 'w', 'a'}, optional
            Mode to open `path`.  Mode 'r' for reading, 'w' for writing,
            'a' to append. Available modes depend on the type of object
            specified by `path`. Default is 'r'.
        encoding : {None, str}, optional
            Open text file with given encoding. The default encoding will be
            what `io.open` uses.
        newline : {None, str}, optional
            Newline to use when reading text file.
    
        Returns
        -------
        out : file object
            File object.
    
        """
    
        # TODO: There is no support for opening a file for writing which
        #       doesn't exist yet (creating a file).  Should there be?
    
        # TODO: Add a ``subdir`` parameter for specifying the subdirectory
        #       used to store URLs in self._destpath.
    
        if self._isurl(path) and self._iswritemode(mode):
            raise ValueError("URLs are not writeable")
    
        # NOTE: _findfile will fail on a new file opened for writing.
        found = self._findfile(path)
        if found:
            _fname, ext = self._splitzipext(found)
            if ext == 'bz2':
                mode.replace("+", "")
>           return _file_openers[ext](found, mode=mode,
                                      encoding=encoding, newline=newline)
E           FileNotFoundError: [Errno 2] No such file or directory: '/tmp/vsc43810/easybuild/build/diceml/0.9/foss-2022a/diceml/dice_ml-0.9/archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data'

/apps/gent/RHEL8/cascadelake-ib/software/SciPy-bundle/2022.05-foss-2022a/lib/python3.10/site-packages/numpy/lib/_datasource.py:529: FileNotFoundError
_______________________________________________ ERROR at setup of TestDiceKDMultiClassificationMethods.test_KD_tree_output[binary-2-3] ________________________________________________
[gw0] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

    @pytest.fixture()
    def KD_multi_classification_exp_object():
        backend = 'sklearn'
        dataset = helpers.load_custom_testing_dataset_multiclass()
        d = dice_ml.Data(dataframe=dataset, continuous_features=['Numerical'], outcome_name='Outcome')
        ML_modelpath = helpers.get_custom_dataset_modelpath_pipeline_multiclass()
        m = dice_ml.Model(model_path=ML_modelpath, backend=backend)
>       exp = dice_ml.Dice(d, m, method='kdtree')

tests/test_dice_interface/test_dice_KD.py:39: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
________________________________________________ ERROR at setup of TestDiceKDMultiClassificationMethods.test_KD_tree_output[None-2-3] _________________________________________________
[gw0] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

    @pytest.fixture()
    def KD_multi_classification_exp_object():
        backend = 'sklearn'
        dataset = helpers.load_custom_testing_dataset_multiclass()
        d = dice_ml.Data(dataframe=dataset, continuous_features=['Numerical'], outcome_name='Outcome')
        ML_modelpath = helpers.get_custom_dataset_modelpath_pipeline_multiclass()
        m = dice_ml.Model(model_path=ML_modelpath, backend=backend)
>       exp = dice_ml.Dice(d, m, method='kdtree')

tests/test_dice_interface/test_dice_KD.py:39: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
____________________________________________________________ ERROR at setup of TestPublicDataMethods.test_permitted_range _____________________________________________________________
[gw5] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

    @pytest.fixture()
    def data_object():
>       dataset = helpers.load_adult_income_dataset()

tests/test_data_interface/test_public_data_interface.py:15: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/utils/helpers.py:25: in load_adult_income_dataset
    raw_data = np.genfromtxt('https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data',
/apps/gent/RHEL8/cascadelake-ib/software/SciPy-bundle/2022.05-foss-2022a/lib/python3.10/site-packages/numpy/lib/npyio.py:1813: in genfromtxt
    fid = np.lib._datasource.open(fname, 'rt', encoding=encoding)
/apps/gent/RHEL8/cascadelake-ib/software/SciPy-bundle/2022.05-foss-2022a/lib/python3.10/site-packages/numpy/lib/_datasource.py:193: in open
    return ds.open(path, mode, encoding=encoding, newline=newline)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <numpy.DataSource object at 0x149ed2b27e20>, path = 'https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data', mode = 'rt', encoding = None, newline = None

    def open(self, path, mode='r', encoding=None, newline=None):
        """
        Open and return file-like object.
    
        If `path` is an URL, it will be downloaded, stored in the
        `DataSource` directory and opened from there.
    
        Parameters
        ----------
        path : str
            Local file path or URL to open.
        mode : {'r', 'w', 'a'}, optional
            Mode to open `path`.  Mode 'r' for reading, 'w' for writing,
            'a' to append. Available modes depend on the type of object
            specified by `path`. Default is 'r'.
        encoding : {None, str}, optional
            Open text file with given encoding. The default encoding will be
            what `io.open` uses.
        newline : {None, str}, optional
            Newline to use when reading text file.
    
        Returns
        -------
        out : file object
            File object.
    
        """
    
        # TODO: There is no support for opening a file for writing which
        #       doesn't exist yet (creating a file).  Should there be?
    
        # TODO: Add a ``subdir`` parameter for specifying the subdirectory
        #       used to store URLs in self._destpath.
    
        if self._isurl(path) and self._iswritemode(mode):
            raise ValueError("URLs are not writeable")
    
        # NOTE: _findfile will fail on a new file opened for writing.
        found = self._findfile(path)
        if found:
            _fname, ext = self._splitzipext(found)
            if ext == 'bz2':
                mode.replace("+", "")
>           return _file_openers[ext](found, mode=mode,
                                      encoding=encoding, newline=newline)
E           FileNotFoundError: [Errno 2] No such file or directory: '/tmp/vsc43810/easybuild/build/diceml/0.9/foss-2022a/diceml/dice_ml-0.9/archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data'

/apps/gent/RHEL8/cascadelake-ib/software/SciPy-bundle/2022.05-foss-2022a/lib/python3.10/site-packages/numpy/lib/_datasource.py:529: FileNotFoundError
__________________________ ERROR at setup of TestDiceKDBinaryClassificationMethods.test_invalid_query_instance[None-0-4-features_to_vary0-permitted_range0] ___________________________
[gw3] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

    @pytest.fixture()
    def KD_binary_classification_exp_object():
        backend = 'sklearn'
        dataset = helpers.load_custom_testing_dataset()
        d = dice_ml.Data(dataframe=dataset, continuous_features=['Numerical'], outcome_name='Outcome')
        ML_modelpath = helpers.get_custom_dataset_modelpath_pipeline()
        m = dice_ml.Model(model_path=ML_modelpath, backend=backend)
>       exp = dice_ml.Dice(d, m, method='kdtree')

tests/test_dice_interface/test_dice_KD.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
_______________________________________________ ERROR at setup of TestDiceKDBinaryClassificationMethods.test_KD_tree_output[linear-0-1] _______________________________________________
[gw3] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

    @pytest.fixture()
    def KD_binary_classification_exp_object():
        backend = 'sklearn'
        dataset = helpers.load_custom_testing_dataset()
        d = dice_ml.Data(dataframe=dataset, continuous_features=['Numerical'], outcome_name='Outcome')
        ML_modelpath = helpers.get_custom_dataset_modelpath_pipeline()
        m = dice_ml.Model(model_path=ML_modelpath, backend=backend)
>       exp = dice_ml.Dice(d, m, method='kdtree')

tests/test_dice_interface/test_dice_KD.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
_______________________________________________ ERROR at setup of TestDiceKDBinaryClassificationMethods.test_KD_tree_output[binary-0-1] _______________________________________________
[gw3] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

    @pytest.fixture()
    def KD_binary_classification_exp_object():
        backend = 'sklearn'
        dataset = helpers.load_custom_testing_dataset()
        d = dice_ml.Data(dataframe=dataset, continuous_features=['Numerical'], outcome_name='Outcome')
        ML_modelpath = helpers.get_custom_dataset_modelpath_pipeline()
        m = dice_ml.Model(model_path=ML_modelpath, backend=backend)
>       exp = dice_ml.Dice(d, m, method='kdtree')

tests/test_dice_interface/test_dice_KD.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
________________________ ERROR at setup of TestDiceKDBinaryVarsClassificationMethods.test_invalid_query_instance[None-0-4-features_to_vary0-permitted_range0] _________________________
[gw1] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

load_custom_vars_testing_dataset =   Categorical  CategoricalNum  Numerical  Outcome
0           a               0         10        0
1           b     ...        14        0
3           a               2         88        0
4           c               1         14        0

    @pytest.fixture()
    def KD_binary_vars_classification_exp_object(load_custom_vars_testing_dataset):
        backend = 'sklearn'
        dataset = load_custom_vars_testing_dataset
        d = dice_ml.Data(dataframe=dataset, continuous_features=['Numerical'], outcome_name='Outcome')
        ML_modelpath = helpers.get_custom_vars_dataset_modelpath_pipeline()
        m = dice_ml.Model(model_path=ML_modelpath, backend=backend)
>       exp = dice_ml.Dice(d, m, method='kdtree')

tests/test_dice_interface/test_dice_KD.py:28: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
________________________________________________ ERROR at setup of TestDiceKDBinaryClassificationMethods.test_KD_tree_output[None-0-1] ________________________________________________
[gw3] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

    @pytest.fixture()
    def KD_binary_classification_exp_object():
        backend = 'sklearn'
        dataset = helpers.load_custom_testing_dataset()
        d = dice_ml.Data(dataframe=dataset, continuous_features=['Numerical'], outcome_name='Outcome')
        ML_modelpath = helpers.get_custom_dataset_modelpath_pipeline()
        m = dice_ml.Model(model_path=ML_modelpath, backend=backend)
>       exp = dice_ml.Dice(d, m, method='kdtree')

tests/test_dice_interface/test_dice_KD.py:17: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
_____________________________________________ ERROR at setup of TestDiceKDBinaryVarsClassificationMethods.test_KD_tree_output[linear-0-1] _____________________________________________
[gw1] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

load_custom_vars_testing_dataset =   Categorical  CategoricalNum  Numerical  Outcome
0           a               0         10        0
1           b     ...        14        0
3           a               2         88        0
4           c               1         14        0

    @pytest.fixture()
    def KD_binary_vars_classification_exp_object(load_custom_vars_testing_dataset):
        backend = 'sklearn'
        dataset = load_custom_vars_testing_dataset
        d = dice_ml.Data(dataframe=dataset, continuous_features=['Numerical'], outcome_name='Outcome')
        ML_modelpath = helpers.get_custom_vars_dataset_modelpath_pipeline()
        m = dice_ml.Model(model_path=ML_modelpath, backend=backend)
>       exp = dice_ml.Dice(d, m, method='kdtree')

tests/test_dice_interface/test_dice_KD.py:28: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
_____________________________________________ ERROR at setup of TestDiceKDBinaryVarsClassificationMethods.test_KD_tree_output[binary-0-1] _____________________________________________
[gw1] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

load_custom_vars_testing_dataset =   Categorical  CategoricalNum  Numerical  Outcome
0           a               0         10        0
1           b     ...        14        0
3           a               2         88        0
4           c               1         14        0

    @pytest.fixture()
    def KD_binary_vars_classification_exp_object(load_custom_vars_testing_dataset):
        backend = 'sklearn'
        dataset = load_custom_vars_testing_dataset
        d = dice_ml.Data(dataframe=dataset, continuous_features=['Numerical'], outcome_name='Outcome')
        ML_modelpath = helpers.get_custom_vars_dataset_modelpath_pipeline()
        m = dice_ml.Model(model_path=ML_modelpath, backend=backend)
>       exp = dice_ml.Dice(d, m, method='kdtree')

tests/test_dice_interface/test_dice_KD.py:28: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
====================================================================================== FAILURES =======================================================================================
________________________________________________ TestSerializationCounterfactualExplanations.test_summary_importance_output[0-10-1.0] _________________________________________________
[gw4] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_counterfactual_explanations.TestSerializationCounterfactualExplanations object at 0x14a6a80e98a0>, desired_class = 0
sample_custom_query_10 =   Categorical  Numerical
0           a         25
1           b         50
2           c         75
3           a     ...       c        150
6           a        175
7           b        200
8           c        225
9           a        250
total_CFs = 10, version = '1.0'

    @pytest.mark.parametrize("version", ['1.0', '2.0'])
    @pytest.mark.parametrize(("desired_class", "total_CFs"), [(0, 10)])
    def test_summary_importance_output(self, desired_class, sample_custom_query_10,
                                       total_CFs, version):
>       counterfactual_explanations = self.exp.global_feature_importance(
            query_instances=sample_custom_query_10, desired_class=desired_class,
            total_CFs=total_CFs)

tests/test_counterfactual_explanations.py:201: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:361: in global_feature_importance
    importances = self.feature_importance(
dice_ml/explainer_interfaces/explainer_base.py:408: in feature_importance
    cf_examples_list = self.generate_counterfactuals(
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_random.py:78: in _generate_counterfactuals
    model_predictions = self.predict_fn(query_instance)
dice_ml/explainer_interfaces/explainer_base.py:484: in predict_fn
    preds = self.model.get_output(input_instance)
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/10 [00:00<?, ?it/s]  0%|          | 0/10 [00:00<?, ?it/s]
_________________________________________________ TestSerializationCounterfactualExplanations.test_local_importance_output[0-10-2.0] __________________________________________________
[gw6] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_counterfactual_explanations.TestSerializationCounterfactualExplanations object at 0x14d893bb1300>, desired_class = 0
sample_custom_query_1 =   Categorical  Numerical
0           a         25, total_CFs = 10, version = '2.0'

    @pytest.mark.parametrize("version", ['1.0', '2.0'])
    @pytest.mark.parametrize(("desired_class", "total_CFs"), [(0, 10)])
    def test_local_importance_output(self, desired_class, sample_custom_query_1,
                                     total_CFs, version):
>       counterfactual_explanations = self.exp.local_feature_importance(
            query_instances=sample_custom_query_1, desired_class=desired_class,
            total_CFs=total_CFs)

tests/test_counterfactual_explanations.py:178: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:292: in local_feature_importance
    importances = self.feature_importance(
dice_ml/explainer_interfaces/explainer_base.py:408: in feature_importance
    cf_examples_list = self.generate_counterfactuals(
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_random.py:78: in _generate_counterfactuals
    model_predictions = self.predict_fn(query_instance)
dice_ml/explainer_interfaces/explainer_base.py:484: in predict_fn
    preds = self.model.get_output(input_instance)
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
____________________________________________ TestSerializationCounterfactualExplanations.test_counterfactual_explanations_output[0-2-1.0] _____________________________________________
[gw0] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_counterfactual_explanations.TestSerializationCounterfactualExplanations object at 0x14a9cbff0b50>, desired_class = 0
sample_custom_query_1 =   Categorical  Numerical
0           a         25, total_CFs = 2, version = '1.0'

    @pytest.mark.parametrize("version", ['1.0', '2.0'])
    @pytest.mark.parametrize(("desired_class", "total_CFs"), [(0, 2)])
    def test_counterfactual_explanations_output(self, desired_class,
                                                sample_custom_query_1, total_CFs,
                                                version):
>       counterfactual_explanations = self.exp.generate_counterfactuals(
            query_instances=sample_custom_query_1, desired_class=desired_class,
            total_CFs=total_CFs)

tests/test_counterfactual_explanations.py:157: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_random.py:78: in _generate_counterfactuals
    model_predictions = self.predict_fn(query_instance)
dice_ml/explainer_interfaces/explainer_base.py:484: in predict_fn
    preds = self.model.get_output(input_instance)
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
_________________________________________________ TestSerializationCounterfactualExplanations.test_local_importance_output[0-10-1.0] __________________________________________________
[gw2] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_counterfactual_explanations.TestSerializationCounterfactualExplanations object at 0x1520e35414e0>, desired_class = 0
sample_custom_query_1 =   Categorical  Numerical
0           a         25, total_CFs = 10, version = '1.0'

    @pytest.mark.parametrize("version", ['1.0', '2.0'])
    @pytest.mark.parametrize(("desired_class", "total_CFs"), [(0, 10)])
    def test_local_importance_output(self, desired_class, sample_custom_query_1,
                                     total_CFs, version):
>       counterfactual_explanations = self.exp.local_feature_importance(
            query_instances=sample_custom_query_1, desired_class=desired_class,
            total_CFs=total_CFs)

tests/test_counterfactual_explanations.py:178: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:292: in local_feature_importance
    importances = self.feature_importance(
dice_ml/explainer_interfaces/explainer_base.py:408: in feature_importance
    cf_examples_list = self.generate_counterfactuals(
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_random.py:78: in _generate_counterfactuals
    model_predictions = self.predict_fn(query_instance)
dice_ml/explainer_interfaces/explainer_base.py:484: in predict_fn
    preds = self.model.get_output(input_instance)
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
____________________________________________ TestSerializationCounterfactualExplanations.test_counterfactual_explanations_output[0-2-2.0] _____________________________________________
[gw3] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_counterfactual_explanations.TestSerializationCounterfactualExplanations object at 0x145669d39120>, desired_class = 0
sample_custom_query_1 =   Categorical  Numerical
0           a         25, total_CFs = 2, version = '2.0'

    @pytest.mark.parametrize("version", ['1.0', '2.0'])
    @pytest.mark.parametrize(("desired_class", "total_CFs"), [(0, 2)])
    def test_counterfactual_explanations_output(self, desired_class,
                                                sample_custom_query_1, total_CFs,
                                                version):
>       counterfactual_explanations = self.exp.generate_counterfactuals(
            query_instances=sample_custom_query_1, desired_class=desired_class,
            total_CFs=total_CFs)

tests/test_counterfactual_explanations.py:157: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_random.py:78: in _generate_counterfactuals
    model_predictions = self.predict_fn(query_instance)
dice_ml/explainer_interfaces/explainer_base.py:484: in predict_fn
    preds = self.model.get_output(input_instance)
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
________________________________________________ TestSerializationCounterfactualExplanations.test_summary_importance_output[0-10-2.0] _________________________________________________
[gw5] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_counterfactual_explanations.TestSerializationCounterfactualExplanations object at 0x149ef5299990>, desired_class = 0
sample_custom_query_10 =   Categorical  Numerical
0           a         25
1           b         50
2           c         75
3           a     ...       c        150
6           a        175
7           b        200
8           c        225
9           a        250
total_CFs = 10, version = '2.0'

    @pytest.mark.parametrize("version", ['1.0', '2.0'])
    @pytest.mark.parametrize(("desired_class", "total_CFs"), [(0, 10)])
    def test_summary_importance_output(self, desired_class, sample_custom_query_10,
                                       total_CFs, version):
>       counterfactual_explanations = self.exp.global_feature_importance(
            query_instances=sample_custom_query_10, desired_class=desired_class,
            total_CFs=total_CFs)

tests/test_counterfactual_explanations.py:201: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:361: in global_feature_importance
    importances = self.feature_importance(
dice_ml/explainer_interfaces/explainer_base.py:408: in feature_importance
    cf_examples_list = self.generate_counterfactuals(
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_random.py:78: in _generate_counterfactuals
    model_predictions = self.predict_fn(query_instance)
dice_ml/explainer_interfaces/explainer_base.py:484: in predict_fn
    preds = self.model.get_output(input_instance)
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/10 [00:00<?, ?it/s]  0%|          | 0/10 [00:00<?, ?it/s]
_________________________________________________ TestSerializationCounterfactualExplanations.test_no_counterfactuals_found[0-2-1.0] __________________________________________________
[gw0] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_counterfactual_explanations.TestSerializationCounterfactualExplanations object at 0x14a9cbff1c90>, desired_class = 0
sample_custom_query_1 =   Categorical  Numerical
0           a         25, total_CFs = 2, version = '1.0'

    @pytest.mark.parametrize("version", ['1.0', '2.0'])
    @pytest.mark.parametrize(("desired_class", "total_CFs"), [(0, 2)])
    def test_no_counterfactuals_found(self, desired_class,
                                      sample_custom_query_1, total_CFs,
                                      version):
>       counterfactual_explanations = self.exp.generate_counterfactuals(
            query_instances=sample_custom_query_1, desired_class=desired_class,
            total_CFs=total_CFs)

tests/test_counterfactual_explanations.py:249: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_random.py:78: in _generate_counterfactuals
    model_predictions = self.predict_fn(query_instance)
dice_ml/explainer_interfaces/explainer_base.py:484: in predict_fn
    preds = self.model.get_output(input_instance)
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
_________________________________________________ TestSerializationCounterfactualExplanations.test_no_counterfactuals_found[0-2-2.0] __________________________________________________
[gw3] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_counterfactual_explanations.TestSerializationCounterfactualExplanations object at 0x145669d39ff0>, desired_class = 0
sample_custom_query_1 =   Categorical  Numerical
0           a         25, total_CFs = 2, version = '2.0'

    @pytest.mark.parametrize("version", ['1.0', '2.0'])
    @pytest.mark.parametrize(("desired_class", "total_CFs"), [(0, 2)])
    def test_no_counterfactuals_found(self, desired_class,
                                      sample_custom_query_1, total_CFs,
                                      version):
>       counterfactual_explanations = self.exp.generate_counterfactuals(
            query_instances=sample_custom_query_1, desired_class=desired_class,
            total_CFs=total_CFs)

tests/test_counterfactual_explanations.py:249: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_random.py:78: in _generate_counterfactuals
    model_predictions = self.predict_fn(query_instance)
dice_ml/explainer_interfaces/explainer_base.py:484: in predict_fn
    preds = self.model.get_output(input_instance)
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
________________________________________ TestSerializationCounterfactualExplanations.test_no_counterfactuals_found_local_importance[0-10-2.0] _________________________________________
[gw6] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_counterfactual_explanations.TestSerializationCounterfactualExplanations object at 0x14d893bb0ca0>, desired_class = 0
sample_custom_query_1 =   Categorical  Numerical
0           a         25, total_CFs = 10, version = '2.0'

    @pytest.mark.parametrize("version", ['1.0', '2.0'])
    @pytest.mark.parametrize(("desired_class", "total_CFs"), [(0, 10)])
    def test_no_counterfactuals_found_local_importance(self, desired_class,
                                                       sample_custom_query_1, total_CFs,
                                                       version):
>       counterfactual_explanations = self.exp.local_feature_importance(
            query_instances=sample_custom_query_1, desired_class=desired_class,
            total_CFs=total_CFs)

tests/test_counterfactual_explanations.py:268: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:292: in local_feature_importance
    importances = self.feature_importance(
dice_ml/explainer_interfaces/explainer_base.py:408: in feature_importance
    cf_examples_list = self.generate_counterfactuals(
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_random.py:78: in _generate_counterfactuals
    model_predictions = self.predict_fn(query_instance)
dice_ml/explainer_interfaces/explainer_base.py:484: in predict_fn
    preds = self.model.get_output(input_instance)
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
_______________________________________ TestSerializationCounterfactualExplanations.test_no_counterfactuals_found_summary_importance[0-10-1.0] ________________________________________
[gw4] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_counterfactual_explanations.TestSerializationCounterfactualExplanations object at 0x14a6a80ea230>, desired_class = 0
sample_custom_query_10 =   Categorical  Numerical
0           a         25
1           b         50
2           c         75
3           a     ...       c        150
6           a        175
7           b        200
8           c        225
9           a        250
total_CFs = 10, version = '1.0'

    @pytest.mark.parametrize("version", ['1.0', '2.0'])
    @pytest.mark.parametrize(("desired_class", "total_CFs"), [(0, 10)])
    def test_no_counterfactuals_found_summary_importance(self, desired_class,
                                                         sample_custom_query_10, total_CFs,
                                                         version):
>       counterfactual_explanations = self.exp.global_feature_importance(
            query_instances=sample_custom_query_10, desired_class=desired_class,
            total_CFs=total_CFs)

tests/test_counterfactual_explanations.py:289: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:361: in global_feature_importance
    importances = self.feature_importance(
dice_ml/explainer_interfaces/explainer_base.py:408: in feature_importance
    cf_examples_list = self.generate_counterfactuals(
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_random.py:78: in _generate_counterfactuals
    model_predictions = self.predict_fn(query_instance)
dice_ml/explainer_interfaces/explainer_base.py:484: in predict_fn
    preds = self.model.get_output(input_instance)
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/10 [00:00<?, ?it/s]  0%|          | 0/10 [00:00<?, ?it/s]
________________________________________ TestSerializationCounterfactualExplanations.test_no_counterfactuals_found_local_importance[0-10-1.0] _________________________________________
[gw2] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_counterfactual_explanations.TestSerializationCounterfactualExplanations object at 0x1520e3540d60>, desired_class = 0
sample_custom_query_1 =   Categorical  Numerical
0           a         25, total_CFs = 10, version = '1.0'

    @pytest.mark.parametrize("version", ['1.0', '2.0'])
    @pytest.mark.parametrize(("desired_class", "total_CFs"), [(0, 10)])
    def test_no_counterfactuals_found_local_importance(self, desired_class,
                                                       sample_custom_query_1, total_CFs,
                                                       version):
>       counterfactual_explanations = self.exp.local_feature_importance(
            query_instances=sample_custom_query_1, desired_class=desired_class,
            total_CFs=total_CFs)

tests/test_counterfactual_explanations.py:268: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:292: in local_feature_importance
    importances = self.feature_importance(
dice_ml/explainer_interfaces/explainer_base.py:408: in feature_importance
    cf_examples_list = self.generate_counterfactuals(
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_random.py:78: in _generate_counterfactuals
    model_predictions = self.predict_fn(query_instance)
dice_ml/explainer_interfaces/explainer_base.py:484: in predict_fn
    preds = self.model.get_output(input_instance)
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
_______________________________________ TestSerializationCounterfactualExplanations.test_no_counterfactuals_found_summary_importance[0-10-2.0] ________________________________________
[gw5] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_counterfactual_explanations.TestSerializationCounterfactualExplanations object at 0x149ef529a320>, desired_class = 0
sample_custom_query_10 =   Categorical  Numerical
0           a         25
1           b         50
2           c         75
3           a     ...       c        150
6           a        175
7           b        200
8           c        225
9           a        250
total_CFs = 10, version = '2.0'

    @pytest.mark.parametrize("version", ['1.0', '2.0'])
    @pytest.mark.parametrize(("desired_class", "total_CFs"), [(0, 10)])
    def test_no_counterfactuals_found_summary_importance(self, desired_class,
                                                         sample_custom_query_10, total_CFs,
                                                         version):
>       counterfactual_explanations = self.exp.global_feature_importance(
            query_instances=sample_custom_query_10, desired_class=desired_class,
            total_CFs=total_CFs)

tests/test_counterfactual_explanations.py:289: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:361: in global_feature_importance
    importances = self.feature_importance(
dice_ml/explainer_interfaces/explainer_base.py:408: in feature_importance
    cf_examples_list = self.generate_counterfactuals(
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_random.py:78: in _generate_counterfactuals
    model_predictions = self.predict_fn(query_instance)
dice_ml/explainer_interfaces/explainer_base.py:484: in predict_fn
    preds = self.model.get_output(input_instance)
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/10 [00:00<?, ?it/s]  0%|          | 0/10 [00:00<?, ?it/s]
___________________________________________________________________________ TestBaseExplainerLoader.test_tf ___________________________________________________________________________
[gw7] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice.TestBaseExplainerLoader object at 0x154ba2ce8940>

    def test_tf(self):
        tf = pytest.importorskip("tensorflow")
        backend = 'TF'+tf.__version__[0]
>       exp = self._get_exp(backend, method="gradient")

tests/test_dice.py:33: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/test_dice.py:11: in _get_exp
    dataset = helpers.load_adult_income_dataset()
dice_ml/utils/helpers.py:86: in load_adult_income_dataset
    shutil.rmtree(entire_path)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/shutil.py:722: in rmtree
    _rmtree_safe_fd(fd, path, onerror)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/shutil.py:655: in _rmtree_safe_fd
    _rmtree_safe_fd(dirfd, fullname, onerror)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/shutil.py:661: in _rmtree_safe_fd
    onerror(os.rmdir, fullname, sys.exc_info())
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

topfd = 14, path = '/tmp/vsc43810/easybuild/build/diceml/0.9/foss-2022a/diceml/dice_ml-0.9/archive.ics.uci.edu/ml', onerror = <function rmtree.<locals>.onerror at 0x154b802da5f0>

    def _rmtree_safe_fd(topfd, path, onerror):
        try:
            with os.scandir(topfd) as scandir_it:
                entries = list(scandir_it)
        except OSError as err:
            err.filename = path
            onerror(os.scandir, path, sys.exc_info())
            return
        for entry in entries:
            fullname = os.path.join(path, entry.name)
            try:
                is_dir = entry.is_dir(follow_symlinks=False)
            except OSError:
                is_dir = False
            else:
                if is_dir:
                    try:
                        orig_st = entry.stat(follow_symlinks=False)
                        is_dir = stat.S_ISDIR(orig_st.st_mode)
                    except OSError:
                        onerror(os.lstat, fullname, sys.exc_info())
                        continue
            if is_dir:
                try:
                    dirfd = os.open(entry.name, os.O_RDONLY, dir_fd=topfd)
                    dirfd_closed = False
                except OSError:
                    onerror(os.open, fullname, sys.exc_info())
                else:
                    try:
                        if os.path.samestat(orig_st, os.fstat(dirfd)):
                            _rmtree_safe_fd(dirfd, fullname, onerror)
                            try:
                                os.close(dirfd)
                                dirfd_closed = True
>                               os.rmdir(entry.name, dir_fd=topfd)
E                               FileNotFoundError: [Errno 2] No such file or directory: 'machine-learning-databases'

/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/shutil.py:659: FileNotFoundError
____________________________________________________ TestDiceKDRegressionMethods.test_KD_tree_output[linear-1.0-desired_range0-6] _____________________________________________________
[gw7] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_dice_KD.TestDiceKDRegressionMethods object at 0x154ba2cea140>, desired_range = [1, 2.8]
sample_custom_query_2 =   Categorical  Numerical
0           b         25, total_CFs = 6, version = '1.0', posthoc_sparsity_algorithm = 'linear'

    @pytest.mark.parametrize(("desired_range", "total_CFs"), [([1, 2.8], 6)])
    @pytest.mark.parametrize(("version"), ['2.0', '1.0'])
    @pytest.mark.parametrize(("posthoc_sparsity_algorithm"), ['linear', 'binary', None])
    def test_KD_tree_output(self, desired_range, sample_custom_query_2, total_CFs, version, posthoc_sparsity_algorithm):
>       cf_examples = self.exp_regr._generate_counterfactuals(query_instance=sample_custom_query_2, total_CFs=total_CFs,
                                                              desired_range=desired_range,
                                                              posthoc_sparsity_algorithm=posthoc_sparsity_algorithm)

tests/test_dice_interface/test_dice_KD.py:175: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/dice_KD.py:94: in _generate_counterfactuals
    test_pred = self.predict_fn(query_instance)[0]
dice_ml/explainer_interfaces/dice_KD.py:137: in predict_fn
    return self.model.get_output(input_instance, model_score=False)
dice_ml/model_interfaces/base_model.py:58: in get_output
    return self.model.predict(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:457: in predict
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
____________________________________________________ TestDiceKDRegressionMethods.test_KD_tree_output[binary-2.0-desired_range0-6] _____________________________________________________
[gw7] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_dice_KD.TestDiceKDRegressionMethods object at 0x154ba2cea110>, desired_range = [1, 2.8]
sample_custom_query_2 =   Categorical  Numerical
0           b         25, total_CFs = 6, version = '2.0', posthoc_sparsity_algorithm = 'binary'

    @pytest.mark.parametrize(("desired_range", "total_CFs"), [([1, 2.8], 6)])
    @pytest.mark.parametrize(("version"), ['2.0', '1.0'])
    @pytest.mark.parametrize(("posthoc_sparsity_algorithm"), ['linear', 'binary', None])
    def test_KD_tree_output(self, desired_range, sample_custom_query_2, total_CFs, version, posthoc_sparsity_algorithm):
>       cf_examples = self.exp_regr._generate_counterfactuals(query_instance=sample_custom_query_2, total_CFs=total_CFs,
                                                              desired_range=desired_range,
                                                              posthoc_sparsity_algorithm=posthoc_sparsity_algorithm)

tests/test_dice_interface/test_dice_KD.py:175: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/dice_KD.py:94: in _generate_counterfactuals
    test_pred = self.predict_fn(query_instance)[0]
dice_ml/explainer_interfaces/dice_KD.py:137: in predict_fn
    return self.model.get_output(input_instance, model_score=False)
dice_ml/model_interfaces/base_model.py:58: in get_output
    return self.model.predict(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:457: in predict
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
____________________________________________________ TestDiceKDRegressionMethods.test_KD_tree_output[binary-1.0-desired_range0-6] _____________________________________________________
[gw7] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_dice_KD.TestDiceKDRegressionMethods object at 0x154ba2cea2c0>, desired_range = [1, 2.8]
sample_custom_query_2 =   Categorical  Numerical
0           b         25, total_CFs = 6, version = '1.0', posthoc_sparsity_algorithm = 'binary'

    @pytest.mark.parametrize(("desired_range", "total_CFs"), [([1, 2.8], 6)])
    @pytest.mark.parametrize(("version"), ['2.0', '1.0'])
    @pytest.mark.parametrize(("posthoc_sparsity_algorithm"), ['linear', 'binary', None])
    def test_KD_tree_output(self, desired_range, sample_custom_query_2, total_CFs, version, posthoc_sparsity_algorithm):
>       cf_examples = self.exp_regr._generate_counterfactuals(query_instance=sample_custom_query_2, total_CFs=total_CFs,
                                                              desired_range=desired_range,
                                                              posthoc_sparsity_algorithm=posthoc_sparsity_algorithm)

tests/test_dice_interface/test_dice_KD.py:175: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/dice_KD.py:94: in _generate_counterfactuals
    test_pred = self.predict_fn(query_instance)[0]
dice_ml/explainer_interfaces/dice_KD.py:137: in predict_fn
    return self.model.get_output(input_instance, model_score=False)
dice_ml/model_interfaces/base_model.py:58: in get_output
    return self.model.predict(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:457: in predict
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
_____________________________________________________ TestDiceKDRegressionMethods.test_KD_tree_output[None-2.0-desired_range0-6] ______________________________________________________
[gw7] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_dice_KD.TestDiceKDRegressionMethods object at 0x154ba2cebb20>, desired_range = [1, 2.8]
sample_custom_query_2 =   Categorical  Numerical
0           b         25, total_CFs = 6, version = '2.0', posthoc_sparsity_algorithm = None

    @pytest.mark.parametrize(("desired_range", "total_CFs"), [([1, 2.8], 6)])
    @pytest.mark.parametrize(("version"), ['2.0', '1.0'])
    @pytest.mark.parametrize(("posthoc_sparsity_algorithm"), ['linear', 'binary', None])
    def test_KD_tree_output(self, desired_range, sample_custom_query_2, total_CFs, version, posthoc_sparsity_algorithm):
>       cf_examples = self.exp_regr._generate_counterfactuals(query_instance=sample_custom_query_2, total_CFs=total_CFs,
                                                              desired_range=desired_range,
                                                              posthoc_sparsity_algorithm=posthoc_sparsity_algorithm)

tests/test_dice_interface/test_dice_KD.py:175: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/dice_KD.py:94: in _generate_counterfactuals
    test_pred = self.predict_fn(query_instance)[0]
dice_ml/explainer_interfaces/dice_KD.py:137: in predict_fn
    return self.model.get_output(input_instance, model_score=False)
dice_ml/model_interfaces/base_model.py:58: in get_output
    return self.model.predict(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:457: in predict
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
_____________________________________________________________ TestBaseExplainerLoader.test_unsupported_sampling_strategy ______________________________________________________________
[gw6] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice.TestBaseExplainerLoader object at 0x14d893ea1570>

    def test_unsupported_sampling_strategy(self):
        pytest.importorskip('sklearn')
        backend = 'sklearn'
        with pytest.raises(UserConfigValidationException):
>           self._get_exp(backend, method="unsupported")

tests/test_dice.py:65: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/test_dice.py:11: in _get_exp
    dataset = helpers.load_adult_income_dataset()
dice_ml/utils/helpers.py:25: in load_adult_income_dataset
    raw_data = np.genfromtxt('https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data',
/apps/gent/RHEL8/cascadelake-ib/software/SciPy-bundle/2022.05-foss-2022a/lib/python3.10/site-packages/numpy/lib/npyio.py:1813: in genfromtxt
    fid = np.lib._datasource.open(fname, 'rt', encoding=encoding)
/apps/gent/RHEL8/cascadelake-ib/software/SciPy-bundle/2022.05-foss-2022a/lib/python3.10/site-packages/numpy/lib/_datasource.py:193: in open
    return ds.open(path, mode, encoding=encoding, newline=newline)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <numpy.DataSource object at 0x14d870f3fa90>, path = 'https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data', mode = 'rt', encoding = None, newline = None

    def open(self, path, mode='r', encoding=None, newline=None):
        """
        Open and return file-like object.
    
        If `path` is an URL, it will be downloaded, stored in the
        `DataSource` directory and opened from there.
    
        Parameters
        ----------
        path : str
            Local file path or URL to open.
        mode : {'r', 'w', 'a'}, optional
            Mode to open `path`.  Mode 'r' for reading, 'w' for writing,
            'a' to append. Available modes depend on the type of object
            specified by `path`. Default is 'r'.
        encoding : {None, str}, optional
            Open text file with given encoding. The default encoding will be
            what `io.open` uses.
        newline : {None, str}, optional
            Newline to use when reading text file.
    
        Returns
        -------
        out : file object
            File object.
    
        """
    
        # TODO: There is no support for opening a file for writing which
        #       doesn't exist yet (creating a file).  Should there be?
    
        # TODO: Add a ``subdir`` parameter for specifying the subdirectory
        #       used to store URLs in self._destpath.
    
        if self._isurl(path) and self._iswritemode(mode):
            raise ValueError("URLs are not writeable")
    
        # NOTE: _findfile will fail on a new file opened for writing.
        found = self._findfile(path)
        if found:
            _fname, ext = self._splitzipext(found)
            if ext == 'bz2':
                mode.replace("+", "")
>           return _file_openers[ext](found, mode=mode,
                                      encoding=encoding, newline=newline)
E           FileNotFoundError: [Errno 2] No such file or directory: '/tmp/vsc43810/easybuild/build/diceml/0.9/foss-2022a/diceml/dice_ml-0.9/archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data'

/apps/gent/RHEL8/cascadelake-ib/software/SciPy-bundle/2022.05-foss-2022a/lib/python3.10/site-packages/numpy/lib/_datasource.py:529: FileNotFoundError
________________________________________________________________ TestBaseExplainerLoader.test_minimum_query_instances _________________________________________________________________
[gw2] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice.TestBaseExplainerLoader object at 0x1520e3834eb0>

    def test_minimum_query_instances(self):
        pytest.importorskip('sklearn')
        backend = 'sklearn'
>       exp = self._get_exp(backend)

tests/test_dice.py:56: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tests/test_dice.py:11: in _get_exp
    dataset = helpers.load_adult_income_dataset()
dice_ml/utils/helpers.py:25: in load_adult_income_dataset
    raw_data = np.genfromtxt('https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data',
/apps/gent/RHEL8/cascadelake-ib/software/SciPy-bundle/2022.05-foss-2022a/lib/python3.10/site-packages/numpy/lib/npyio.py:1813: in genfromtxt
    fid = np.lib._datasource.open(fname, 'rt', encoding=encoding)
/apps/gent/RHEL8/cascadelake-ib/software/SciPy-bundle/2022.05-foss-2022a/lib/python3.10/site-packages/numpy/lib/_datasource.py:193: in open
    return ds.open(path, mode, encoding=encoding, newline=newline)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <numpy.DataSource object at 0x1520c073d570>, path = 'https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data', mode = 'rt', encoding = None, newline = None

    def open(self, path, mode='r', encoding=None, newline=None):
        """
        Open and return file-like object.
    
        If `path` is an URL, it will be downloaded, stored in the
        `DataSource` directory and opened from there.
    
        Parameters
        ----------
        path : str
            Local file path or URL to open.
        mode : {'r', 'w', 'a'}, optional
            Mode to open `path`.  Mode 'r' for reading, 'w' for writing,
            'a' to append. Available modes depend on the type of object
            specified by `path`. Default is 'r'.
        encoding : {None, str}, optional
            Open text file with given encoding. The default encoding will be
            what `io.open` uses.
        newline : {None, str}, optional
            Newline to use when reading text file.
    
        Returns
        -------
        out : file object
            File object.
    
        """
    
        # TODO: There is no support for opening a file for writing which
        #       doesn't exist yet (creating a file).  Should there be?
    
        # TODO: Add a ``subdir`` parameter for specifying the subdirectory
        #       used to store URLs in self._destpath.
    
        if self._isurl(path) and self._iswritemode(mode):
            raise ValueError("URLs are not writeable")
    
        # NOTE: _findfile will fail on a new file opened for writing.
        found = self._findfile(path)
        if found:
            _fname, ext = self._splitzipext(found)
            if ext == 'bz2':
                mode.replace("+", "")
>           return _file_openers[ext](found, mode=mode,
                                      encoding=encoding, newline=newline)
E           FileNotFoundError: [Errno 2] No such file or directory: '/tmp/vsc43810/easybuild/build/diceml/0.9/foss-2022a/diceml/dice_ml-0.9/archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data'

/apps/gent/RHEL8/cascadelake-ib/software/SciPy-bundle/2022.05-foss-2022a/lib/python3.10/site-packages/numpy/lib/_datasource.py:529: FileNotFoundError
__________________________________________________________________ TestUserDataCorruption.test_user_data_corruption ___________________________________________________________________
[gw3] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_data_interface.test_public_data_interface.TestUserDataCorruption object at 0x145669d996f0>

    def test_user_data_corruption(self):
>       dataset = helpers.load_adult_income_dataset()

tests/test_data_interface/test_public_data_interface.py:227: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/utils/helpers.py:25: in load_adult_income_dataset
    raw_data = np.genfromtxt('https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data',
/apps/gent/RHEL8/cascadelake-ib/software/SciPy-bundle/2022.05-foss-2022a/lib/python3.10/site-packages/numpy/lib/npyio.py:1813: in genfromtxt
    fid = np.lib._datasource.open(fname, 'rt', encoding=encoding)
/apps/gent/RHEL8/cascadelake-ib/software/SciPy-bundle/2022.05-foss-2022a/lib/python3.10/site-packages/numpy/lib/_datasource.py:193: in open
    return ds.open(path, mode, encoding=encoding, newline=newline)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = <numpy.DataSource object at 0x14564724af50>, path = 'https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data', mode = 'rt', encoding = None, newline = None

    def open(self, path, mode='r', encoding=None, newline=None):
        """
        Open and return file-like object.
    
        If `path` is an URL, it will be downloaded, stored in the
        `DataSource` directory and opened from there.
    
        Parameters
        ----------
        path : str
            Local file path or URL to open.
        mode : {'r', 'w', 'a'}, optional
            Mode to open `path`.  Mode 'r' for reading, 'w' for writing,
            'a' to append. Available modes depend on the type of object
            specified by `path`. Default is 'r'.
        encoding : {None, str}, optional
            Open text file with given encoding. The default encoding will be
            what `io.open` uses.
        newline : {None, str}, optional
            Newline to use when reading text file.
    
        Returns
        -------
        out : file object
            File object.
    
        """
    
        # TODO: There is no support for opening a file for writing which
        #       doesn't exist yet (creating a file).  Should there be?
    
        # TODO: Add a ``subdir`` parameter for specifying the subdirectory
        #       used to store URLs in self._destpath.
    
        if self._isurl(path) and self._iswritemode(mode):
            raise ValueError("URLs are not writeable")
    
        # NOTE: _findfile will fail on a new file opened for writing.
        found = self._findfile(path)
        if found:
            _fname, ext = self._splitzipext(found)
            if ext == 'bz2':
                mode.replace("+", "")
>           return _file_openers[ext](found, mode=mode,
                                      encoding=encoding, newline=newline)
E           FileNotFoundError: [Errno 2] No such file or directory: '/tmp/vsc43810/easybuild/build/diceml/0.9/foss-2022a/diceml/dice_ml-0.9/archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data'

/apps/gent/RHEL8/cascadelake-ib/software/SciPy-bundle/2022.05-foss-2022a/lib/python3.10/site-packages/numpy/lib/_datasource.py:529: FileNotFoundError
_____________________________________________________ TestDiceKDRegressionMethods.test_KD_tree_output[None-1.0-desired_range0-6] ______________________________________________________
[gw7] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_dice_KD.TestDiceKDRegressionMethods object at 0x154ba2ceb880>, desired_range = [1, 2.8]
sample_custom_query_2 =   Categorical  Numerical
0           b         25, total_CFs = 6, version = '1.0', posthoc_sparsity_algorithm = None

    @pytest.mark.parametrize(("desired_range", "total_CFs"), [([1, 2.8], 6)])
    @pytest.mark.parametrize(("version"), ['2.0', '1.0'])
    @pytest.mark.parametrize(("posthoc_sparsity_algorithm"), ['linear', 'binary', None])
    def test_KD_tree_output(self, desired_range, sample_custom_query_2, total_CFs, version, posthoc_sparsity_algorithm):
>       cf_examples = self.exp_regr._generate_counterfactuals(query_instance=sample_custom_query_2, total_CFs=total_CFs,
                                                              desired_range=desired_range,
                                                              posthoc_sparsity_algorithm=posthoc_sparsity_algorithm)

tests/test_dice_interface/test_dice_KD.py:175: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/dice_KD.py:94: in _generate_counterfactuals
    test_pred = self.predict_fn(query_instance)[0]
dice_ml/explainer_interfaces/dice_KD.py:137: in predict_fn
    return self.model.get_output(input_instance, model_score=False)
dice_ml/model_interfaces/base_model.py:58: in get_output
    return self.model.predict(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:457: in predict
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
____________________________________________________ TestDiceKDRegressionMethods.test_KD_tree_output[linear-2.0-desired_range0-6] _____________________________________________________
[gw0] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_dice_KD.TestDiceKDRegressionMethods object at 0x14a9cc00f5e0>, desired_range = [1, 2.8]
sample_custom_query_2 =   Categorical  Numerical
0           b         25, total_CFs = 6, version = '2.0', posthoc_sparsity_algorithm = 'linear'

    @pytest.mark.parametrize(("desired_range", "total_CFs"), [([1, 2.8], 6)])
    @pytest.mark.parametrize(("version"), ['2.0', '1.0'])
    @pytest.mark.parametrize(("posthoc_sparsity_algorithm"), ['linear', 'binary', None])
    def test_KD_tree_output(self, desired_range, sample_custom_query_2, total_CFs, version, posthoc_sparsity_algorithm):
>       cf_examples = self.exp_regr._generate_counterfactuals(query_instance=sample_custom_query_2, total_CFs=total_CFs,
                                                              desired_range=desired_range,
                                                              posthoc_sparsity_algorithm=posthoc_sparsity_algorithm)

tests/test_dice_interface/test_dice_KD.py:175: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/dice_KD.py:94: in _generate_counterfactuals
    test_pred = self.predict_fn(query_instance)[0]
dice_ml/explainer_interfaces/dice_KD.py:137: in predict_fn
    return self.model.get_output(input_instance, model_score=False)
dice_ml/model_interfaces/base_model.py:58: in get_output
    return self.model.predict(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:457: in predict
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
____________________________________________ TestDiceKDRegressionMethods.test_KD_tree_counterfactual_explanations_output[desired_range0-6] ____________________________________________
[gw1] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_dice_KD.TestDiceKDRegressionMethods object at 0x14d93d217130>, desired_range = [1, 2.8]
sample_custom_query_2 =   Categorical  Numerical
0           b         25, total_CFs = 6

    @pytest.mark.parametrize(("desired_range", "total_CFs"), [([1, 2.8], 6)])
    def test_KD_tree_counterfactual_explanations_output(self, desired_range, sample_custom_query_2,
                                                        total_CFs):
>       counterfactual_explanations = self.exp_regr.generate_counterfactuals(
                                            query_instances=sample_custom_query_2, total_CFs=total_CFs,
                                            desired_range=desired_range)

tests/test_dice_interface/test_dice_KD.py:191: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_KD.py:94: in _generate_counterfactuals
    test_pred = self.predict_fn(query_instance)[0]
dice_ml/explainer_interfaces/dice_KD.py:137: in predict_fn
    return self.model.get_output(input_instance, model_score=False)
dice_ml/model_interfaces/base_model.py:58: in get_output
    return self.model.predict(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:457: in predict
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
____________________________________________________ TestExplainerBaseBinaryClassification.test_local_feature_importance[1-random] ____________________________________________________
[gw0] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseBinaryClassification object at 0x14a9a99f7d60>, desired_class = 1, method = 'random'
sample_custom_query_1 =   Categorical  Numerical
0           a         25
sample_counterfactual_example_dummy =    Categorical  Numerical  Outcome
0            a         25        1
1            b         50        1
2            ...  175        1
12           c        200        1
13           c        225        1
14           c        250        1
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14a9a931beb0>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14a9a931ba30>

    @pytest.mark.parametrize("desired_class", [1])
    def test_local_feature_importance(
            self, desired_class, method,
            sample_custom_query_1, sample_counterfactual_example_dummy,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
        exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)
        sample_custom_query = pd.concat([sample_custom_query_1, sample_custom_query_1])
>       cf_explanations = exp.generate_counterfactuals(
                    query_instances=sample_custom_query,
                    total_CFs=15,
                    desired_class=desired_class)

tests/test_dice_interface/test_explainer_base.py:62: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_random.py:78: in _generate_counterfactuals
    model_predictions = self.predict_fn(query_instance)
dice_ml/explainer_interfaces/explainer_base.py:484: in predict_fn
    preds = self.model.get_output(input_instance)
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/2 [00:00<?, ?it/s]  0%|          | 0/2 [00:00<?, ?it/s]
___________________________________________________ TestExplainerBaseBinaryClassification.test_global_feature_importance[1-kdtree] ____________________________________________________
[gw2] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseBinaryClassification object at 0x1520e3616fe0>, desired_class = 1, method = 'kdtree'
sample_custom_query_10 =   Categorical  Numerical
0           a         25
1           b         50
2           c         75
3           a     ...       c        150
6           a        175
7           b        200
8           c        225
9           a        250
sample_counterfactual_example_dummy =    Categorical  Numerical  Outcome
0            a         25        1
1            b         50        1
2            ...  175        1
12           c        200        1
13           c        225        1
14           c        250        1
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x1520c0ea1990>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x1520c0ea1cf0>

    @pytest.mark.parametrize("desired_class", [1])
    def test_global_feature_importance(
            self, desired_class, method,
            sample_custom_query_10, sample_counterfactual_example_dummy,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
>       exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)

tests/test_dice_interface/test_explainer_base.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
_______________________________________________ TestExplainerBaseBinaryClassification.test_incorrect_features_permitted_range[1-kdtree] _______________________________________________
[gw6] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseBinaryClassification object at 0x14d893c48250>, desired_class = 1, method = 'kdtree'
sample_custom_query_1 =   Categorical  Numerical
0           a         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14d870cd0df0>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14d870cd0c40>

    @pytest.mark.parametrize("desired_class", [1])
    def test_incorrect_features_permitted_range(
            self, desired_class, method, sample_custom_query_1,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
>       exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)

tests/test_dice_interface/test_explainer_base.py:153: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
____________________________________________________________ TestDiceKDRegressionMethods.test_zero_cfs[0-desired_range0-0] ____________________________________________________________
[gw1] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_dice_KD.TestDiceKDRegressionMethods object at 0x14d93d214370>, desired_class = 0, desired_range = [1, 2.8]
sample_custom_query_4 =   Categorical  Numerical
0           c         13, total_CFs = 0

    @pytest.mark.parametrize(("desired_class", "desired_range", "total_CFs"), [(0, [1, 2.8], 0)])
    def test_zero_cfs(self, desired_class, desired_range, sample_custom_query_4, total_CFs):
>       self.exp_regr._generate_counterfactuals(query_instance=sample_custom_query_4, total_CFs=total_CFs,
                                                desired_range=desired_range)

tests/test_dice_interface/test_dice_KD.py:206: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/dice_KD.py:94: in _generate_counterfactuals
    test_pred = self.predict_fn(query_instance)[0]
dice_ml/explainer_interfaces/dice_KD.py:137: in predict_fn
    return self.model.get_output(input_instance, model_score=False)
dice_ml/model_interfaces/base_model.py:58: in get_output
    return self.model.predict(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:457: in predict
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         13, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
________________________________________________ TestExplainerBaseBinaryClassification.test_incorrect_features_to_vary_list[1-kdtree] _________________________________________________
[gw2] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseBinaryClassification object at 0x1520e36159c0>, desired_class = 1, method = 'kdtree'
sample_custom_query_1 =   Categorical  Numerical
0           a         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x1520c0ea1990>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x1520c0ea1cf0>

    @pytest.mark.parametrize("desired_class", [1])
    def test_incorrect_features_to_vary_list(
            self, desired_class, method, sample_custom_query_1,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
>       exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)

tests/test_dice_interface/test_explainer_base.py:133: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
_________________________________________________ TestExplainerBaseBinaryClassification.test_query_instance_unknown_column[1-kdtree] __________________________________________________
[gw6] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseBinaryClassification object at 0x14d893c4bd60>, desired_class = 1, method = 'kdtree'
sample_custom_query_5 =    X  Numerical
0  d         25, custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14d870cd0df0>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14d870cd0c40>

    @pytest.mark.parametrize("desired_class", [1])
    def test_query_instance_unknown_column(
            self, desired_class, method, sample_custom_query_5,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
>       exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)

tests/test_dice_interface/test_explainer_base.py:213: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
___________________________________________________ TestExplainerBaseBinaryClassification.test_unsupported_binary_class[100-kdtree] ___________________________________________________
[gw2] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseBinaryClassification object at 0x1520e3614e20>, desired_class = 100, method = 'kdtree'
sample_custom_query_1 =   Categorical  Numerical
0           a         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x1520c0ea1990>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x1520c0ea1cf0>

    @pytest.mark.parametrize("desired_class", [100, 'a'])
    def test_unsupported_binary_class(
            self, desired_class, method, sample_custom_query_1,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
>       exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)

tests/test_dice_interface/test_explainer_base.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
___________________________________________________ TestExplainerBaseBinaryClassification.test_local_feature_importance[1-genetic] ____________________________________________________
[gw0] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseBinaryClassification object at 0x14a9a99f7bb0>, desired_class = 1, method = 'genetic'
sample_custom_query_1 =   Categorical  Numerical
0           a         25
sample_counterfactual_example_dummy =    Categorical  Numerical  Outcome
0            a         25        1
1            b         50        1
2            ...  175        1
12           c        200        1
13           c        225        1
14           c        250        1
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14a9a931beb0>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14a9a931ba30>

    @pytest.mark.parametrize("desired_class", [1])
    def test_local_feature_importance(
            self, desired_class, method,
            sample_custom_query_1, sample_counterfactual_example_dummy,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
        exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)
        sample_custom_query = pd.concat([sample_custom_query_1, sample_custom_query_1])
>       cf_explanations = exp.generate_counterfactuals(
                    query_instances=sample_custom_query,
                    total_CFs=15,
                    desired_class=desired_class)

tests/test_dice_interface/test_explainer_base.py:62: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_genetic.py:270: in _generate_counterfactuals
    self.num_output_nodes = self.model.get_num_output_nodes2(query_instance)
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/2 [00:00<?, ?it/s]  0%|          | 0/2 [00:00<?, ?it/s]
_________________________________________________ TestExplainerBaseBinaryClassification.test_query_instance_outside_bounds[1-kdtree] __________________________________________________
[gw6] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseBinaryClassification object at 0x14d893c4a9e0>, desired_class = 1, method = 'kdtree'
sample_custom_query_3 =   Categorical  Numerical
0           d    1000000
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14d870cd0df0>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14d870cd0c40>

    @pytest.mark.parametrize("desired_class", [1])
    def test_query_instance_outside_bounds(
            self, desired_class, method, sample_custom_query_3,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
>       exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)

tests/test_dice_interface/test_explainer_base.py:228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
____________________________________________________ TestExplainerBaseBinaryClassification.test_unsupported_binary_class[a-random] ____________________________________________________
[gw2] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseBinaryClassification object at 0x1520e3614c70>, desired_class = 'a', method = 'random'
sample_custom_query_1 =   Categorical  Numerical
0           a         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x1520c0ea1990>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x1520c0ea1cf0>

    @pytest.mark.parametrize("desired_class", [100, 'a'])
    def test_unsupported_binary_class(
            self, desired_class, method, sample_custom_query_1,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
        exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)
        with pytest.raises(UserConfigValidationException) as ucve:
>           exp.generate_counterfactuals(query_instances=sample_custom_query_1, total_CFs=3,
                                         desired_class=desired_class)

tests/test_dice_interface/test_explainer_base.py:200: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_random.py:78: in _generate_counterfactuals
    model_predictions = self.predict_fn(query_instance)
dice_ml/explainer_interfaces/explainer_base.py:484: in predict_fn
    preds = self.model.get_output(input_instance)
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
____________________________________________________ TestExplainerBaseBinaryClassification.test_local_feature_importance[1-kdtree] ____________________________________________________
[gw0] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseBinaryClassification object at 0x14a9a99f7b50>, desired_class = 1, method = 'kdtree'
sample_custom_query_1 =   Categorical  Numerical
0           a         25
sample_counterfactual_example_dummy =    Categorical  Numerical  Outcome
0            a         25        1
1            b         50        1
2            ...  175        1
12           c        200        1
13           c        225        1
14           c        250        1
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14a9a931beb0>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14a9a931ba30>

    @pytest.mark.parametrize("desired_class", [1])
    def test_local_feature_importance(
            self, desired_class, method,
            sample_custom_query_1, sample_counterfactual_example_dummy,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
>       exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)

tests/test_dice_interface/test_explainer_base.py:57: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
_________________________________________________________ TestExplainerBaseBinaryClassification.test_desired_class[1-random] __________________________________________________________
[gw6] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseBinaryClassification object at 0x14d893c4b3a0>, desired_class = 1, method = 'random'
sample_custom_query_2 =   Categorical  Numerical
0           b         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14d870cd0df0>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14d870cd0c40>

    @pytest.mark.parametrize("desired_class", [1])
    def test_desired_class(
            self, desired_class, method, sample_custom_query_2,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
        exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)
>       ans = exp.generate_counterfactuals(query_instances=sample_custom_query_2,
                                           features_to_vary='all',
                                           total_CFs=2, desired_class=desired_class,
                                           proximity_weight=0.2, sparsity_weight=0.2,
                                           diversity_weight=5.0,
                                           categorical_penalty=0.1,
                                           permitted_range=None)

tests/test_dice_interface/test_explainer_base.py:246: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_random.py:78: in _generate_counterfactuals
    model_predictions = self.predict_fn(query_instance)
dice_ml/explainer_interfaces/explainer_base.py:484: in predict_fn
    preds = self.model.get_output(input_instance)
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
_______________________________________________ TestExplainerBaseBinaryClassification.test_permitted_range[1-1-permitted_range0-random] _______________________________________________
[gw3] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseBinaryClassification object at 0x145669d86710>, desired_class = 1, method = 'random', total_CFs = 1
permitted_range = {'Numerical': [10, 150]}, sample_custom_query_2 =   Categorical  Numerical
0           b         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x145646f35ff0>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x145646f36d70>

    @pytest.mark.parametrize(("desired_class", "total_CFs", "permitted_range"),
                             [(1, 1, {'Numerical': [10, 150]})])
    def test_permitted_range(
            self, desired_class, method, total_CFs, permitted_range, sample_custom_query_2,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
        exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)
>       ans = exp.generate_counterfactuals(query_instances=sample_custom_query_2,
                                           permitted_range=permitted_range,
                                           total_CFs=total_CFs, desired_class=desired_class)

tests/test_dice_interface/test_explainer_base.py:285: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_random.py:78: in _generate_counterfactuals
    model_predictions = self.predict_fn(query_instance)
dice_ml/explainer_interfaces/explainer_base.py:484: in predict_fn
    preds = self.model.get_output(input_instance)
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
___________________________________________________ TestExplainerBaseBinaryClassification.test_global_feature_importance[1-random] ____________________________________________________
[gw0] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseBinaryClassification object at 0x14a9a99f78b0>, desired_class = 1, method = 'random'
sample_custom_query_10 =   Categorical  Numerical
0           a         25
1           b         50
2           c         75
3           a     ...       c        150
6           a        175
7           b        200
8           c        225
9           a        250
sample_counterfactual_example_dummy =    Categorical  Numerical  Outcome
0            a         25        1
1            b         50        1
2            ...  175        1
12           c        200        1
13           c        225        1
14           c        250        1
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14a9a931beb0>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14a9a931ba30>

    @pytest.mark.parametrize("desired_class", [1])
    def test_global_feature_importance(
            self, desired_class, method,
            sample_custom_query_10, sample_counterfactual_example_dummy,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
        exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)
    
>       cf_explanations = exp.generate_counterfactuals(
                    query_instances=sample_custom_query_10,
                    total_CFs=15,
                    desired_class=desired_class)

tests/test_dice_interface/test_explainer_base.py:95: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_random.py:78: in _generate_counterfactuals
    model_predictions = self.predict_fn(query_instance)
dice_ml/explainer_interfaces/explainer_base.py:484: in predict_fn
    preds = self.model.get_output(input_instance)
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/10 [00:00<?, ?it/s]  0%|          | 0/10 [00:00<?, ?it/s]
_______________________________________________ TestExplainerBaseBinaryClassification.test_zero_cfs_internal[all-0-None-0-None-random] ________________________________________________
[gw1] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseBinaryClassification object at 0x14d93d15c9a0>, method = 'random'
features_to_vary = ['Categorical', 'Numerical'], desired_class = 0, desired_range = None, sample_custom_query_2 =   Categorical  Numerical
0           b         25, total_CFs = 0
permitted_range = None, custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14d918393b80>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14d918390c40>

    @pytest.mark.parametrize(("features_to_vary", "desired_class", "desired_range", "total_CFs", "permitted_range"),
                             [("all", 0, None, 0, None)])
    def test_zero_cfs_internal(
            self, method, features_to_vary, desired_class, desired_range, sample_custom_query_2, total_CFs,
            permitted_range, custom_public_data_interface, sklearn_binary_classification_model_interface):
        if method == 'genetic':
            pytest.skip('DiceGenetic explainer does not handle the total counterfactuals as zero')
        exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)
        features_to_vary = exp.setup(features_to_vary, None, sample_custom_query_2, "inverse_mad")
>       exp._generate_counterfactuals(features_to_vary=features_to_vary, query_instance=sample_custom_query_2,
                                      total_CFs=total_CFs, desired_class=desired_class,
                                      desired_range=desired_range, permitted_range=permitted_range)

tests/test_dice_interface/test_explainer_base.py:312: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/dice_random.py:78: in _generate_counterfactuals
    model_predictions = self.predict_fn(query_instance)
dice_ml/explainer_interfaces/explainer_base.py:484: in predict_fn
    preds = self.model.get_output(input_instance)
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
___________________________________________________ TestExplainerBaseBinaryClassification.test_unsupported_binary_class[a-genetic] ____________________________________________________
[gw2] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseBinaryClassification object at 0x1520e3616020>, desired_class = 'a', method = 'genetic'
sample_custom_query_1 =   Categorical  Numerical
0           a         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x1520c0ea1990>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x1520c0ea1cf0>

    @pytest.mark.parametrize("desired_class", [100, 'a'])
    def test_unsupported_binary_class(
            self, desired_class, method, sample_custom_query_1,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
        exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)
        with pytest.raises(UserConfigValidationException) as ucve:
>           exp.generate_counterfactuals(query_instances=sample_custom_query_1, total_CFs=3,
                                         desired_class=desired_class)

tests/test_dice_interface/test_explainer_base.py:200: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_genetic.py:270: in _generate_counterfactuals
    self.num_output_nodes = self.model.get_num_output_nodes2(query_instance)
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
_________________________________________________________ TestExplainerBaseBinaryClassification.test_desired_class[1-genetic] _________________________________________________________
[gw6] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseBinaryClassification object at 0x14d893c4aa40>, desired_class = 1, method = 'genetic'
sample_custom_query_2 =   Categorical  Numerical
0           b         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14d870cd0df0>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14d870cd0c40>

    @pytest.mark.parametrize("desired_class", [1])
    def test_desired_class(
            self, desired_class, method, sample_custom_query_2,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
        exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)
>       ans = exp.generate_counterfactuals(query_instances=sample_custom_query_2,
                                           features_to_vary='all',
                                           total_CFs=2, desired_class=desired_class,
                                           proximity_weight=0.2, sparsity_weight=0.2,
                                           diversity_weight=5.0,
                                           categorical_penalty=0.1,
                                           permitted_range=None)

tests/test_dice_interface/test_explainer_base.py:246: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_genetic.py:270: in _generate_counterfactuals
    self.num_output_nodes = self.model.get_num_output_nodes2(query_instance)
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
______________________________________________ TestExplainerBaseBinaryClassification.test_permitted_range[1-1-permitted_range0-genetic] _______________________________________________
[gw3] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseBinaryClassification object at 0x145669d86350>, desired_class = 1, method = 'genetic', total_CFs = 1
permitted_range = {'Numerical': [10, 150]}, sample_custom_query_2 =   Categorical  Numerical
0           b         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x145646f35ff0>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x145646f36d70>

    @pytest.mark.parametrize(("desired_class", "total_CFs", "permitted_range"),
                             [(1, 1, {'Numerical': [10, 150]})])
    def test_permitted_range(
            self, desired_class, method, total_CFs, permitted_range, sample_custom_query_2,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
        exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)
>       ans = exp.generate_counterfactuals(query_instances=sample_custom_query_2,
                                           permitted_range=permitted_range,
                                           total_CFs=total_CFs, desired_class=desired_class)

tests/test_dice_interface/test_explainer_base.py:285: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_genetic.py:270: in _generate_counterfactuals
    self.num_output_nodes = self.model.get_num_output_nodes2(query_instance)
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
_______________________________________________ TestExplainerBaseBinaryClassification.test_zero_cfs_internal[all-0-None-0-None-kdtree] ________________________________________________
[gw1] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseBinaryClassification object at 0x14d93d15fc10>, method = 'kdtree', features_to_vary = 'all', desired_class = 0
desired_range = None, sample_custom_query_2 =   Categorical  Numerical
0           b         25, total_CFs = 0, permitted_range = None
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14d918393b80>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14d918390c40>

    @pytest.mark.parametrize(("features_to_vary", "desired_class", "desired_range", "total_CFs", "permitted_range"),
                             [("all", 0, None, 0, None)])
    def test_zero_cfs_internal(
            self, method, features_to_vary, desired_class, desired_range, sample_custom_query_2, total_CFs,
            permitted_range, custom_public_data_interface, sklearn_binary_classification_model_interface):
        if method == 'genetic':
            pytest.skip('DiceGenetic explainer does not handle the total counterfactuals as zero')
>       exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)

tests/test_dice_interface/test_explainer_base.py:307: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
____________________________________________________ TestExplainerBaseBinaryClassification.test_unsupported_binary_class[a-kdtree] ____________________________________________________
[gw2] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseBinaryClassification object at 0x1520e3616590>, desired_class = 'a', method = 'kdtree'
sample_custom_query_1 =   Categorical  Numerical
0           a         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x1520c0ea1990>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x1520c0ea1cf0>

    @pytest.mark.parametrize("desired_class", [100, 'a'])
    def test_unsupported_binary_class(
            self, desired_class, method, sample_custom_query_1,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
>       exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)

tests/test_dice_interface/test_explainer_base.py:195: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
_________________________________________________________ TestExplainerBaseBinaryClassification.test_desired_class[1-kdtree] __________________________________________________________
[gw6] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseBinaryClassification object at 0x14d893c4a800>, desired_class = 1, method = 'kdtree'
sample_custom_query_2 =   Categorical  Numerical
0           b         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14d870cd0df0>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14d870cd0c40>

    @pytest.mark.parametrize("desired_class", [1])
    def test_desired_class(
            self, desired_class, method, sample_custom_query_2,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
>       exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)

tests/test_dice_interface/test_explainer_base.py:242: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
___________________________________________________ TestExplainerBaseBinaryClassification.test_global_feature_importance[1-genetic] ___________________________________________________
[gw0] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseBinaryClassification object at 0x14a9a99f7490>, desired_class = 1, method = 'genetic'
sample_custom_query_10 =   Categorical  Numerical
0           a         25
1           b         50
2           c         75
3           a     ...       c        150
6           a        175
7           b        200
8           c        225
9           a        250
sample_counterfactual_example_dummy =    Categorical  Numerical  Outcome
0            a         25        1
1            b         50        1
2            ...  175        1
12           c        200        1
13           c        225        1
14           c        250        1
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14a9a931beb0>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14a9a931ba30>

    @pytest.mark.parametrize("desired_class", [1])
    def test_global_feature_importance(
            self, desired_class, method,
            sample_custom_query_10, sample_counterfactual_example_dummy,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
        exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)
    
>       cf_explanations = exp.generate_counterfactuals(
                    query_instances=sample_custom_query_10,
                    total_CFs=15,
                    desired_class=desired_class)

tests/test_dice_interface/test_explainer_base.py:95: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_genetic.py:270: in _generate_counterfactuals
    self.num_output_nodes = self.model.get_num_output_nodes2(query_instance)
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/10 [00:00<?, ?it/s]  0%|          | 0/10 [00:00<?, ?it/s]
_______________________________________________ TestExplainerBaseBinaryClassification.test_permitted_range[1-1-permitted_range0-kdtree] _______________________________________________
[gw3] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseBinaryClassification object at 0x145669d85e10>, desired_class = 1, method = 'kdtree', total_CFs = 1
permitted_range = {'Numerical': [10, 150]}, sample_custom_query_2 =   Categorical  Numerical
0           b         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x145646f35ff0>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x145646f36d70>

    @pytest.mark.parametrize(("desired_class", "total_CFs", "permitted_range"),
                             [(1, 1, {'Numerical': [10, 150]})])
    def test_permitted_range(
            self, desired_class, method, total_CFs, permitted_range, sample_custom_query_2,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
>       exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)

tests/test_dice_interface/test_explainer_base.py:281: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
__________________________________________________ TestExplainerBaseMultiClassClassification.test_desired_class[kdtree-2-2-genetic] ___________________________________________________
[gw2] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseMultiClassClassification object at 0x1520e36143d0>, desired_class = 2, total_CFs = 2, method = 'genetic'
genetic_initialization = 'kdtree', sample_custom_query_2 =   Categorical  Numerical
0           b         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x1520c0ea1990>
sklearn_multiclass_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x1520c0701990>

    @pytest.mark.parametrize(("desired_class", "total_CFs"), [(2, 2)])
    @pytest.mark.parametrize("genetic_initialization", ['kdtree', 'random'])
    def test_desired_class(
            self, desired_class, total_CFs, method, genetic_initialization,
            sample_custom_query_2,
            custom_public_data_interface,
            sklearn_multiclass_classification_model_interface):
        exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_multiclass_classification_model_interface,
            method=method)
    
        if method != 'genetic':
            ans = exp.generate_counterfactuals(
                    query_instances=sample_custom_query_2,
                    total_CFs=total_CFs, desired_class=desired_class)
        else:
>           ans = exp.generate_counterfactuals(
                    query_instances=sample_custom_query_2,
                    total_CFs=total_CFs, desired_class=desired_class,
                    initialization=genetic_initialization)

tests/test_dice_interface/test_explainer_base.py:353: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_genetic.py:270: in _generate_counterfactuals
    self.num_output_nodes = self.model.get_num_output_nodes2(query_instance)
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
___________________________________________________ TestExplainerBaseMultiClassClassification.test_desired_class[random-2-2-random] ___________________________________________________
[gw6] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseMultiClassClassification object at 0x14d893c48f70>, desired_class = 2, total_CFs = 2, method = 'random'
genetic_initialization = 'random', sample_custom_query_2 =   Categorical  Numerical
0           b         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14d870cd0df0>
sklearn_multiclass_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14d870f178b0>

    @pytest.mark.parametrize(("desired_class", "total_CFs"), [(2, 2)])
    @pytest.mark.parametrize("genetic_initialization", ['kdtree', 'random'])
    def test_desired_class(
            self, desired_class, total_CFs, method, genetic_initialization,
            sample_custom_query_2,
            custom_public_data_interface,
            sklearn_multiclass_classification_model_interface):
        exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_multiclass_classification_model_interface,
            method=method)
    
        if method != 'genetic':
>           ans = exp.generate_counterfactuals(
                    query_instances=sample_custom_query_2,
                    total_CFs=total_CFs, desired_class=desired_class)

tests/test_dice_interface/test_explainer_base.py:349: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_random.py:78: in _generate_counterfactuals
    model_predictions = self.predict_fn(query_instance)
dice_ml/explainer_interfaces/explainer_base.py:484: in predict_fn
    preds = self.model.get_output(input_instance)
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
________________________________________________ TestExplainerBaseMultiClassClassification.test_unsupported_multiclass[100-3-genetic] _________________________________________________
[gw0] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseMultiClassClassification object at 0x14a9cc07c100>, desired_class = 100, total_CFs = 3, method = 'genetic'
sample_custom_query_4 =   Categorical  Numerical
0           c         13
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14a9a931beb0>
sklearn_multiclass_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14a9a9354790>

    @pytest.mark.parametrize(("desired_class", "total_CFs"), [(100, 3), ('opposite', 3)])
    def test_unsupported_multiclass(
            self, desired_class, total_CFs, method, sample_custom_query_4,
            custom_public_data_interface,
            sklearn_multiclass_classification_model_interface):
        exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_multiclass_classification_model_interface,
            method=method)
        with pytest.raises(UserConfigValidationException) as ucve:
>           exp.generate_counterfactuals(query_instances=sample_custom_query_4, total_CFs=total_CFs,
                                         desired_class=desired_class)

tests/test_dice_interface/test_explainer_base.py:403: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_genetic.py:270: in _generate_counterfactuals
    self.num_output_nodes = self.model.get_num_output_nodes2(query_instance)
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         13, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
___________________________________________________ TestExplainerBaseMultiClassClassification.test_desired_class[random-2-2-kdtree] ___________________________________________________
[gw3] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseMultiClassClassification object at 0x145669d86110>, desired_class = 2, total_CFs = 2, method = 'kdtree'
genetic_initialization = 'random', sample_custom_query_2 =   Categorical  Numerical
0           b         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x145646f35ff0>
sklearn_multiclass_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x1456477e1fc0>

    @pytest.mark.parametrize(("desired_class", "total_CFs"), [(2, 2)])
    @pytest.mark.parametrize("genetic_initialization", ['kdtree', 'random'])
    def test_desired_class(
            self, desired_class, total_CFs, method, genetic_initialization,
            sample_custom_query_2,
            custom_public_data_interface,
            sklearn_multiclass_classification_model_interface):
>       exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_multiclass_classification_model_interface,
            method=method)

tests/test_dice_interface/test_explainer_base.py:343: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
_______________________________________________________ TestExplainerBaseMultiClassClassification.test_zero_totalcfs[1-kdtree] ________________________________________________________
[gw1] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseMultiClassClassification object at 0x14d93d15fb80>, desired_class = 1, method = 'kdtree'
sample_custom_query_1 =   Categorical  Numerical
0           a         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14d918393b80>
sklearn_multiclass_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14d91835d1e0>

    @pytest.mark.parametrize("desired_class", [1])
    def test_zero_totalcfs(
            self, desired_class, method, sample_custom_query_1,
            custom_public_data_interface,
            sklearn_multiclass_classification_model_interface):
>       exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_multiclass_classification_model_interface,
            method=method)

tests/test_dice_interface/test_explainer_base.py:325: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
___________________________________________________ TestExplainerBaseMultiClassClassification.test_desired_class[kdtree-2-2-kdtree] ___________________________________________________
[gw2] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseMultiClassClassification object at 0x1520e36151b0>, desired_class = 2, total_CFs = 2, method = 'kdtree'
genetic_initialization = 'kdtree', sample_custom_query_2 =   Categorical  Numerical
0           b         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x1520c0ea1990>
sklearn_multiclass_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x1520c0701990>

    @pytest.mark.parametrize(("desired_class", "total_CFs"), [(2, 2)])
    @pytest.mark.parametrize("genetic_initialization", ['kdtree', 'random'])
    def test_desired_class(
            self, desired_class, total_CFs, method, genetic_initialization,
            sample_custom_query_2,
            custom_public_data_interface,
            sklearn_multiclass_classification_model_interface):
>       exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_multiclass_classification_model_interface,
            method=method)

tests/test_dice_interface/test_explainer_base.py:343: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
_________________________________________________ TestExplainerBaseMultiClassClassification.test_unsupported_multiclass[100-3-kdtree] _________________________________________________
[gw0] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseMultiClassClassification object at 0x14a9cc07c820>, desired_class = 100, total_CFs = 3, method = 'kdtree'
sample_custom_query_4 =   Categorical  Numerical
0           c         13
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14a9a931beb0>
sklearn_multiclass_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14a9a9354790>

    @pytest.mark.parametrize(("desired_class", "total_CFs"), [(100, 3), ('opposite', 3)])
    def test_unsupported_multiclass(
            self, desired_class, total_CFs, method, sample_custom_query_4,
            custom_public_data_interface,
            sklearn_multiclass_classification_model_interface):
>       exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_multiclass_classification_model_interface,
            method=method)

tests/test_dice_interface/test_explainer_base.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
___________________________________________________ TestExplainerBaseMultiClassClassification.test_desired_class[kdtree-2-2-random] ___________________________________________________
[gw1] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseMultiClassClassification object at 0x14d93d15d2a0>, desired_class = 2, total_CFs = 2, method = 'random'
genetic_initialization = 'kdtree', sample_custom_query_2 =   Categorical  Numerical
0           b         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14d918393b80>
sklearn_multiclass_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14d91835d1e0>

    @pytest.mark.parametrize(("desired_class", "total_CFs"), [(2, 2)])
    @pytest.mark.parametrize("genetic_initialization", ['kdtree', 'random'])
    def test_desired_class(
            self, desired_class, total_CFs, method, genetic_initialization,
            sample_custom_query_2,
            custom_public_data_interface,
            sklearn_multiclass_classification_model_interface):
        exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_multiclass_classification_model_interface,
            method=method)
    
        if method != 'genetic':
>           ans = exp.generate_counterfactuals(
                    query_instances=sample_custom_query_2,
                    total_CFs=total_CFs, desired_class=desired_class)

tests/test_dice_interface/test_explainer_base.py:349: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_random.py:78: in _generate_counterfactuals
    model_predictions = self.predict_fn(query_instance)
dice_ml/explainer_interfaces/explainer_base.py:484: in predict_fn
    preds = self.model.get_output(input_instance)
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
__________________________________________________ TestExplainerBaseMultiClassClassification.test_desired_class[random-2-2-genetic] ___________________________________________________
[gw6] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseMultiClassClassification object at 0x14d893c48c10>, desired_class = 2, total_CFs = 2, method = 'genetic'
genetic_initialization = 'random', sample_custom_query_2 =   Categorical  Numerical
0           b         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14d870cd0df0>
sklearn_multiclass_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14d870f178b0>

    @pytest.mark.parametrize(("desired_class", "total_CFs"), [(2, 2)])
    @pytest.mark.parametrize("genetic_initialization", ['kdtree', 'random'])
    def test_desired_class(
            self, desired_class, total_CFs, method, genetic_initialization,
            sample_custom_query_2,
            custom_public_data_interface,
            sklearn_multiclass_classification_model_interface):
        exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_multiclass_classification_model_interface,
            method=method)
    
        if method != 'genetic':
            ans = exp.generate_counterfactuals(
                    query_instances=sample_custom_query_2,
                    total_CFs=total_CFs, desired_class=desired_class)
        else:
>           ans = exp.generate_counterfactuals(
                    query_instances=sample_custom_query_2,
                    total_CFs=total_CFs, desired_class=desired_class,
                    initialization=genetic_initialization)

tests/test_dice_interface/test_explainer_base.py:353: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_genetic.py:270: in _generate_counterfactuals
    self.num_output_nodes = self.model.get_num_output_nodes2(query_instance)
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
_________________________________________________ TestExplainerBaseMultiClassClassification.test_unsupported_multiclass[100-3-random] _________________________________________________
[gw3] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseMultiClassClassification object at 0x145669d84f70>, desired_class = 100, total_CFs = 3, method = 'random'
sample_custom_query_4 =   Categorical  Numerical
0           c         13
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x145646f35ff0>
sklearn_multiclass_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x1456477e1fc0>

    @pytest.mark.parametrize(("desired_class", "total_CFs"), [(100, 3), ('opposite', 3)])
    def test_unsupported_multiclass(
            self, desired_class, total_CFs, method, sample_custom_query_4,
            custom_public_data_interface,
            sklearn_multiclass_classification_model_interface):
        exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_multiclass_classification_model_interface,
            method=method)
        with pytest.raises(UserConfigValidationException) as ucve:
>           exp.generate_counterfactuals(query_instances=sample_custom_query_4, total_CFs=total_CFs,
                                         desired_class=desired_class)

tests/test_dice_interface/test_explainer_base.py:403: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_random.py:78: in _generate_counterfactuals
    model_predictions = self.predict_fn(query_instance)
dice_ml/explainer_interfaces/explainer_base.py:484: in predict_fn
    preds = self.model.get_output(input_instance)
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         13, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
______________________________________________ TestExplainerBaseMultiClassClassification.test_unsupported_multiclass[opposite-3-random] _______________________________________________
[gw2] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseMultiClassClassification object at 0x1520e3615570>, desired_class = 'opposite', total_CFs = 3, method = 'random'
sample_custom_query_4 =   Categorical  Numerical
0           c         13
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x1520c0ea1990>
sklearn_multiclass_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x1520c0701990>

    @pytest.mark.parametrize(("desired_class", "total_CFs"), [(100, 3), ('opposite', 3)])
    def test_unsupported_multiclass(
            self, desired_class, total_CFs, method, sample_custom_query_4,
            custom_public_data_interface,
            sklearn_multiclass_classification_model_interface):
        exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_multiclass_classification_model_interface,
            method=method)
        with pytest.raises(UserConfigValidationException) as ucve:
>           exp.generate_counterfactuals(query_instances=sample_custom_query_4, total_CFs=total_CFs,
                                         desired_class=desired_class)

tests/test_dice_interface/test_explainer_base.py:403: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_random.py:78: in _generate_counterfactuals
    model_predictions = self.predict_fn(query_instance)
dice_ml/explainer_interfaces/explainer_base.py:484: in predict_fn
    preds = self.model.get_output(input_instance)
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         13, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
____________________________ TestExplainerBaseUserConfigValidations.test_generate_counterfactuals_user_config_validations[generate_counterfactuals-kdtree] ____________________________
[gw1] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseUserConfigValidations object at 0x14d91ab321a0>, method = 'kdtree'
sample_custom_query_2 =   Categorical  Numerical
0           b         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14d918393b80>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14d918390c40>, explainer_function = 'generate_counterfactuals'

    @pytest.mark.parametrize('explainer_function',
                             ['generate_counterfactuals', 'local_feature_importance',
                              'feature_importance', 'global_feature_importance'])
    def test_generate_counterfactuals_user_config_validations(
            self, method, sample_custom_query_2,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            explainer_function):
>       exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)

tests/test_dice_interface/test_explainer_base.py:494: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
______________________________________________ TestExplainerBaseMultiClassClassification.test_unsupported_multiclass[opposite-3-kdtree] _______________________________________________
[gw6] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseMultiClassClassification object at 0x14d893c49420>, desired_class = 'opposite', total_CFs = 3, method = 'kdtree'
sample_custom_query_4 =   Categorical  Numerical
0           c         13
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14d870cd0df0>
sklearn_multiclass_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14d870f178b0>

    @pytest.mark.parametrize(("desired_class", "total_CFs"), [(100, 3), ('opposite', 3)])
    def test_unsupported_multiclass(
            self, desired_class, total_CFs, method, sample_custom_query_4,
            custom_public_data_interface,
            sklearn_multiclass_classification_model_interface):
>       exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_multiclass_classification_model_interface,
            method=method)

tests/test_dice_interface/test_explainer_base.py:398: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
_____________________________________________ TestExplainerBaseMultiClassClassification.test_zero_cfs_internal[all-0-None-0-None-kdtree] ______________________________________________
[gw3] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseMultiClassClassification object at 0x145669d86d40>, method = 'kdtree', features_to_vary = 'all'
desired_class = 0, desired_range = None, sample_custom_query_2 =   Categorical  Numerical
0           b         25, total_CFs = 0, permitted_range = None
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x145646f35ff0>
sklearn_multiclass_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x1456477e1fc0>

    @pytest.mark.parametrize(("features_to_vary", "desired_class", "desired_range", "total_CFs", "permitted_range"),
                             [("all", 0, None, 0, None)])
    def test_zero_cfs_internal(
            self, method, features_to_vary, desired_class, desired_range, sample_custom_query_2, total_CFs,
            permitted_range, custom_public_data_interface, sklearn_multiclass_classification_model_interface):
        if method == 'genetic':
            pytest.skip('DiceGenetic explainer does not handle the total counterfactuals as zero')
>       exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_multiclass_classification_model_interface,
            method=method)

tests/test_dice_interface/test_explainer_base.py:418: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
________________________________________________ TestExplainerBaseBinaryClassification.test_incorrect_values_permitted_range[1-kdtree] ________________________________________________
[gw4] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseBinaryClassification object at 0x14a685967c70>, desired_class = 1, method = 'kdtree'
sample_custom_query_1 =   Categorical  Numerical
0           a         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14a6851aa320>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14a6851aa0b0>

    @pytest.mark.parametrize("desired_class", [1])
    def test_incorrect_values_permitted_range(
            self, desired_class, method, sample_custom_query_1,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
>       exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)

tests/test_dice_interface/test_explainer_base.py:173: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
______________________________________________ TestExplainerBaseMultiClassClassification.test_unsupported_multiclass[opposite-3-genetic] ______________________________________________
[gw2] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseMultiClassClassification object at 0x1520e3616290>, desired_class = 'opposite', total_CFs = 3
method = 'genetic', sample_custom_query_4 =   Categorical  Numerical
0           c         13
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x1520c0ea1990>
sklearn_multiclass_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x1520c0701990>

    @pytest.mark.parametrize(("desired_class", "total_CFs"), [(100, 3), ('opposite', 3)])
    def test_unsupported_multiclass(
            self, desired_class, total_CFs, method, sample_custom_query_4,
            custom_public_data_interface,
            sklearn_multiclass_classification_model_interface):
        exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_multiclass_classification_model_interface,
            method=method)
        with pytest.raises(UserConfigValidationException) as ucve:
>           exp.generate_counterfactuals(query_instances=sample_custom_query_4, total_CFs=total_CFs,
                                         desired_class=desired_class)

tests/test_dice_interface/test_explainer_base.py:403: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_genetic.py:270: in _generate_counterfactuals
    self.num_output_nodes = self.model.get_num_output_nodes2(query_instance)
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         13, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
_____________________________________________ TestExplainerBaseMultiClassClassification.test_zero_cfs_internal[all-0-None-0-None-random] ______________________________________________
[gw6] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseMultiClassClassification object at 0x14d893c48e50>, method = 'random'
features_to_vary = ['Categorical', 'Numerical'], desired_class = 0, desired_range = None, sample_custom_query_2 =   Categorical  Numerical
0           b         25, total_CFs = 0
permitted_range = None, custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14d870cd0df0>
sklearn_multiclass_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14d870f178b0>

    @pytest.mark.parametrize(("features_to_vary", "desired_class", "desired_range", "total_CFs", "permitted_range"),
                             [("all", 0, None, 0, None)])
    def test_zero_cfs_internal(
            self, method, features_to_vary, desired_class, desired_range, sample_custom_query_2, total_CFs,
            permitted_range, custom_public_data_interface, sklearn_multiclass_classification_model_interface):
        if method == 'genetic':
            pytest.skip('DiceGenetic explainer does not handle the total counterfactuals as zero')
        exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_multiclass_classification_model_interface,
            method=method)
        features_to_vary = exp.setup(features_to_vary, None, sample_custom_query_2, "inverse_mad")
>       exp._generate_counterfactuals(features_to_vary=features_to_vary, query_instance=sample_custom_query_2,
                                      total_CFs=total_CFs, desired_class=desired_class,
                                      desired_range=desired_range, permitted_range=permitted_range)

tests/test_dice_interface/test_explainer_base.py:423: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/dice_random.py:78: in _generate_counterfactuals
    model_predictions = self.predict_fn(query_instance)
dice_ml/explainer_interfaces/explainer_base.py:484: in predict_fn
    preds = self.model.get_output(input_instance)
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
___________________________ TestExplainerBaseUserConfigValidations.test_generate_counterfactuals_user_config_validations[global_feature_importance-kdtree] ____________________________
[gw3] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseUserConfigValidations object at 0x1456477fa2c0>, method = 'kdtree'
sample_custom_query_2 =   Categorical  Numerical
0           b         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x145646f35ff0>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x145646f36d70>, explainer_function = 'global_feature_importance'

    @pytest.mark.parametrize('explainer_function',
                             ['generate_counterfactuals', 'local_feature_importance',
                              'feature_importance', 'global_feature_importance'])
    def test_generate_counterfactuals_user_config_validations(
            self, method, sample_custom_query_2,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            explainer_function):
>       exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)

tests/test_dice_interface/test_explainer_base.py:494: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
____________________________ TestExplainerBaseUserConfigValidations.test_generate_counterfactuals_user_config_validations[local_feature_importance-kdtree] ____________________________
[gw2] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseUserConfigValidations object at 0x1520c0fee170>, method = 'kdtree'
sample_custom_query_2 =   Categorical  Numerical
0           b         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x1520c0ea1990>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x1520c0ea1cf0>, explainer_function = 'local_feature_importance'

    @pytest.mark.parametrize('explainer_function',
                             ['generate_counterfactuals', 'local_feature_importance',
                              'feature_importance', 'global_feature_importance'])
    def test_generate_counterfactuals_user_config_validations(
            self, method, sample_custom_query_2,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            explainer_function):
>       exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)

tests/test_dice_interface/test_explainer_base.py:494: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
___________________________________________________ TestExplainerBaseBinaryClassification.test_unsupported_binary_class[100-random] ___________________________________________________
[gw4] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseBinaryClassification object at 0x14a685967640>, desired_class = 100, method = 'random'
sample_custom_query_1 =   Categorical  Numerical
0           a         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14a6851aa320>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14a6851aa0b0>

    @pytest.mark.parametrize("desired_class", [100, 'a'])
    def test_unsupported_binary_class(
            self, desired_class, method, sample_custom_query_1,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
        exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)
        with pytest.raises(UserConfigValidationException) as ucve:
>           exp.generate_counterfactuals(query_instances=sample_custom_query_1, total_CFs=3,
                                         desired_class=desired_class)

tests/test_dice_interface/test_explainer_base.py:200: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_random.py:78: in _generate_counterfactuals
    model_predictions = self.predict_fn(query_instance)
dice_ml/explainer_interfaces/explainer_base.py:484: in predict_fn
    preds = self.model.get_output(input_instance)
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
_______________________________ TestExplainerBaseUserConfigValidations.test_generate_counterfactuals_user_config_validations[feature_importance-kdtree] _______________________________
[gw1] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseUserConfigValidations object at 0x14d91ab30cd0>, method = 'kdtree'
sample_custom_query_2 =   Categorical  Numerical
0           b         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14d918393b80>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14d918390c40>, explainer_function = 'feature_importance'

    @pytest.mark.parametrize('explainer_function',
                             ['generate_counterfactuals', 'local_feature_importance',
                              'feature_importance', 'global_feature_importance'])
    def test_generate_counterfactuals_user_config_validations(
            self, method, sample_custom_query_2,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            explainer_function):
>       exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)

tests/test_dice_interface/test_explainer_base.py:494: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
___________________________ TestExplainerBaseDataValidations.test_local_feature_importance_error_conditions_with_insufficient_cfs_per_query_point[genetic] ____________________________
[gw1] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseDataValidations object at 0x14d91ab333d0>, method = 'genetic'
sample_custom_query_1 =   Categorical  Numerical
0           a         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14d918393b80>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14d918390c40>

    def test_local_feature_importance_error_conditions_with_insufficient_cfs_per_query_point(
            self, method,
            sample_custom_query_1,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
        exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)
    
>       cf_explanations = exp.generate_counterfactuals(
                    query_instances=sample_custom_query_1,
                    total_CFs=1)

tests/test_dice_interface/test_explainer_base.py:657: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_genetic.py:270: in _generate_counterfactuals
    self.num_output_nodes = self.model.get_num_output_nodes2(query_instance)
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
_______________________________ TestExplainerBaseDataValidations.test_global_feature_importance_error_conditions_with_insufficient_query_points[random] _______________________________
[gw3] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseDataValidations object at 0x1456477f8be0>, method = 'random'
sample_custom_query_1 =   Categorical  Numerical
0           a         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x145646f35ff0>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x145646f36d70>

    def test_global_feature_importance_error_conditions_with_insufficient_query_points(
            self, method,
            sample_custom_query_1,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
        exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)
    
>       cf_explanations = exp.generate_counterfactuals(
                    query_instances=sample_custom_query_1,
                    total_CFs=15)

tests/test_dice_interface/test_explainer_base.py:594: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_random.py:78: in _generate_counterfactuals
    model_predictions = self.predict_fn(query_instance)
dice_ml/explainer_interfaces/explainer_base.py:484: in predict_fn
    preds = self.model.get_output(input_instance)
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
______________________________ TestExplainerBaseDataValidations.test_global_feature_importance_error_conditions_with_insufficient_query_points[genetic] _______________________________
[gw6] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseDataValidations object at 0x14d8715fc670>, method = 'genetic'
sample_custom_query_1 =   Categorical  Numerical
0           a         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14d870cd0df0>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14d870cd0c40>

    def test_global_feature_importance_error_conditions_with_insufficient_query_points(
            self, method,
            sample_custom_query_1,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
        exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)
    
>       cf_explanations = exp.generate_counterfactuals(
                    query_instances=sample_custom_query_1,
                    total_CFs=15)

tests/test_dice_interface/test_explainer_base.py:594: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_genetic.py:270: in _generate_counterfactuals
    self.num_output_nodes = self.model.get_num_output_nodes2(query_instance)
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
___________________________ TestExplainerBaseDataValidations.test_global_feature_importance_error_conditions_with_insufficient_cfs_per_query_point[genetic] ___________________________
[gw2] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseDataValidations object at 0x1520c0fec910>, method = 'genetic'
sample_custom_query_10 =   Categorical  Numerical
0           a         25
1           b         50
2           c         75
3           a     ...       c        150
6           a        175
7           b        200
8           c        225
9           a        250
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x1520c0ea1990>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x1520c0ea1cf0>

    def test_global_feature_importance_error_conditions_with_insufficient_cfs_per_query_point(
            self, method,
            sample_custom_query_10,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
        exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)
    
>       cf_explanations = exp.generate_counterfactuals(
                    query_instances=sample_custom_query_10,
                    total_CFs=1)

tests/test_dice_interface/test_explainer_base.py:625: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_genetic.py:270: in _generate_counterfactuals
    self.num_output_nodes = self.model.get_num_output_nodes2(query_instance)
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/10 [00:00<?, ?it/s]  0%|          | 0/10 [00:00<?, ?it/s]
____________________________ TestExplainerBaseDataValidations.test_local_feature_importance_error_conditions_with_insufficient_cfs_per_query_point[kdtree] ____________________________
[gw1] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseDataValidations object at 0x14d91ab33280>, method = 'kdtree'
sample_custom_query_1 =   Categorical  Numerical
0           a         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14d918393b80>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14d918390c40>

    def test_local_feature_importance_error_conditions_with_insufficient_cfs_per_query_point(
            self, method,
            sample_custom_query_1,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
>       exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)

tests/test_dice_interface/test_explainer_base.py:652: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
__________________________________________________ TestExplainerBaseBinaryClassification.test_unsupported_binary_class[100-genetic] ___________________________________________________
[gw4] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseBinaryClassification object at 0x14a6859678b0>, desired_class = 100, method = 'genetic'
sample_custom_query_1 =   Categorical  Numerical
0           a         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14a6851aa320>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14a6851aa0b0>

    @pytest.mark.parametrize("desired_class", [100, 'a'])
    def test_unsupported_binary_class(
            self, desired_class, method, sample_custom_query_1,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
        exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)
        with pytest.raises(UserConfigValidationException) as ucve:
>           exp.generate_counterfactuals(query_instances=sample_custom_query_1, total_CFs=3,
                                         desired_class=desired_class)

tests/test_dice_interface/test_explainer_base.py:200: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_genetic.py:270: in _generate_counterfactuals
    self.num_output_nodes = self.model.get_num_output_nodes2(query_instance)
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
_______________________________ TestExplainerBaseDataValidations.test_global_feature_importance_error_conditions_with_insufficient_query_points[kdtree] _______________________________
[gw3] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseDataValidations object at 0x1456477f89a0>, method = 'kdtree'
sample_custom_query_1 =   Categorical  Numerical
0           a         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x145646f35ff0>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x145646f36d70>

    def test_global_feature_importance_error_conditions_with_insufficient_query_points(
            self, method,
            sample_custom_query_1,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
>       exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)

tests/test_dice_interface/test_explainer_base.py:589: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
___________________________ TestExplainerBaseDataValidations.test_global_feature_importance_error_conditions_with_insufficient_cfs_per_query_point[random] ____________________________
[gw6] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseDataValidations object at 0x14d8715fcac0>, method = 'random'
sample_custom_query_10 =   Categorical  Numerical
0           a         25
1           b         50
2           c         75
3           a     ...       c        150
6           a        175
7           b        200
8           c        225
9           a        250
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14d870cd0df0>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14d870cd0c40>

    def test_global_feature_importance_error_conditions_with_insufficient_cfs_per_query_point(
            self, method,
            sample_custom_query_10,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
        exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)
    
>       cf_explanations = exp.generate_counterfactuals(
                    query_instances=sample_custom_query_10,
                    total_CFs=1)

tests/test_dice_interface/test_explainer_base.py:625: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_random.py:78: in _generate_counterfactuals
    model_predictions = self.predict_fn(query_instance)
dice_ml/explainer_interfaces/explainer_base.py:484: in predict_fn
    preds = self.model.get_output(input_instance)
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/10 [00:00<?, ?it/s]  0%|          | 0/10 [00:00<?, ?it/s]
___________________________ TestExplainerBaseDataValidations.test_global_feature_importance_error_conditions_with_insufficient_cfs_per_query_point[kdtree] ____________________________
[gw4] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseDataValidations object at 0x14a6859a54b0>, method = 'kdtree'
sample_custom_query_10 =   Categorical  Numerical
0           a         25
1           b         50
2           c         75
3           a     ...       c        150
6           a        175
7           b        200
8           c        225
9           a        250
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x14a6851aa320>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x14a6851aa0b0>

    def test_global_feature_importance_error_conditions_with_insufficient_cfs_per_query_point(
            self, method,
            sample_custom_query_10,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
>       exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)

tests/test_dice_interface/test_explainer_base.py:620: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
____________________________ TestExplainerBaseDataValidations.test_local_feature_importance_error_conditions_with_insufficient_cfs_per_query_point[random] ____________________________
[gw2] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseDataValidations object at 0x1520c0fef310>, method = 'random'
sample_custom_query_1 =   Categorical  Numerical
0           a         25
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x1520c0ea1990>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x1520c0ea1cf0>

    def test_local_feature_importance_error_conditions_with_insufficient_cfs_per_query_point(
            self, method,
            sample_custom_query_1,
            custom_public_data_interface,
            sklearn_binary_classification_model_interface):
        exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)
    
>       cf_explanations = exp.generate_counterfactuals(
                    query_instances=sample_custom_query_1,
                    total_CFs=1)

tests/test_dice_interface/test_explainer_base.py:657: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/explainer_interfaces/explainer_base.py:161: in generate_counterfactuals
    res = self._generate_counterfactuals(
dice_ml/explainer_interfaces/dice_random.py:78: in _generate_counterfactuals
    model_predictions = self.predict_fn(query_instance)
dice_ml/explainer_interfaces/explainer_base.py:484: in predict_fn
    preds = self.model.get_output(input_instance)
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         25, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
-------------------------------------------------------------------------------- Captured stderr call ---------------------------------------------------------------------------------
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
________________________________________________ TestExplainerBaseBinaryClassification.test_check_any_counterfactuals_computed[kdtree] ________________________________________________
[gw7] linux -- Python 3.10.4 /apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/bin/python

self = <tests.test_dice_interface.test_explainer_base.TestExplainerBaseBinaryClassification object at 0x154ba2b3c820>, method = 'kdtree'
custom_public_data_interface = <dice_ml.data_interfaces.public_data_interface.PublicData object at 0x154b7f803d00>
sklearn_binary_classification_model_interface = <dice_ml.model_interfaces.base_model.BaseModel object at 0x154b7f8000d0>

    def test_check_any_counterfactuals_computed(
        self, method,
        custom_public_data_interface,
        sklearn_binary_classification_model_interface
    ):
>       exp = dice_ml.Dice(
            custom_public_data_interface,
            sklearn_binary_classification_model_interface,
            method=method)

tests/test_dice_interface/test_explainer_base.py:25: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
dice_ml/dice.py:21: in __init__
    self.decide_implementation_type(data_interface, model_interface, method, **kwargs)
dice_ml/dice.py:31: in decide_implementation_type
    self.__init__(data_interface, model_interface, **kwargs)
dice_ml/explainer_interfaces/dice_KD.py:44: in __init__
    self.num_output_nodes = self.model.get_num_output_nodes2(
dice_ml/model_interfaces/base_model.py:70: in get_num_output_nodes2
    return self.get_output(input_instance).shape[1]
dice_ml/model_interfaces/base_model.py:54: in get_output
    return self.model.predict_proba(input_instance)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:523: in predict_proba
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:763: in transform
    Xs = self._fit_transform(
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/compose/_column_transformer.py:621: in _fit_transform
    return Parallel(n_jobs=self.n_jobs)(
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:1043: in __call__
    if self.dispatch_one_batch(iterator):
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:861: in dispatch_one_batch
    self._dispatch(tasks)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:779: in _dispatch
    job = self._backend.apply_async(batch, callback=cb)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:208: in apply_async
    result = ImmediateResult(func)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/_parallel_backends.py:572: in __init__
    self.results = batch()
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in __call__
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/Python/3.10.4-GCCcore-11.3.0/lib/python3.10/site-packages/joblib/parallel.py:262: in <listcomp>
    return [func(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/utils/fixes.py:117: in __call__
    return self.function(*args, **kwargs)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:853: in _transform_one
    res = transformer.transform(X)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/pipeline.py:635: in transform
    Xt = transform.transform(Xt)
/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:515: in transform
    X = self._validate_input(X, in_fit=False)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = SimpleImputer(strategy='median'), X =    Numerical
0         10, in_fit = False

    def _validate_input(self, X, in_fit):
        allowed_strategies = ["mean", "median", "most_frequent", "constant"]
        if self.strategy not in allowed_strategies:
            raise ValueError(
                "Can only use these strategies: {0}  got strategy={1}".format(
                    allowed_strategies, self.strategy
                )
            )
    
        if self.strategy in ("most_frequent", "constant"):
            # If input is a list of strings, dtype = object.
            # Otherwise ValueError is raised in SimpleImputer
            # with strategy='most_frequent' or 'constant'
            # because the list is converted to Unicode numpy array
            if isinstance(X, list) and any(
                isinstance(elem, str) for row in X for elem in row
            ):
                dtype = object
            else:
                dtype = None
        else:
            dtype = FLOAT_DTYPES
    
>       if not in_fit and self._fit_dtype.kind == "O":
E       AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'

/apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/impute/_base.py:292: AttributeError
================================================================================== warnings summary ===================================================================================
tests/test_counterfactual_explanations.py: 18 warnings
tests/test_dice_interface/test_dice_KD.py: 28 warnings
tests/test_dice_interface/test_explainer_base.py: 91 warnings
  /apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator SimpleImputer from version 1.1.1 when using version 1.1.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
  https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
    warnings.warn(

tests/test_counterfactual_explanations.py: 18 warnings
tests/test_dice_interface/test_dice_KD.py: 28 warnings
tests/test_dice_interface/test_explainer_base.py: 91 warnings
  /apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator StandardScaler from version 1.1.1 when using version 1.1.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
  https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
    warnings.warn(

tests/test_counterfactual_explanations.py: 18 warnings
tests/test_dice_interface/test_dice_KD.py: 28 warnings
tests/test_dice.py: 1 warning
tests/test_dice_interface/test_explainer_base.py: 91 warnings
  /apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator Pipeline from version 1.1.1 when using version 1.1.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
  https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
    warnings.warn(

tests/test_counterfactual_explanations.py: 18 warnings
tests/test_dice_interface/test_dice_KD.py: 28 warnings
tests/test_dice.py: 1 warning
tests/test_dice_interface/test_explainer_base.py: 91 warnings
  /apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator OneHotEncoder from version 1.1.1 when using version 1.1.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
  https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
    warnings.warn(

tests/test_counterfactual_explanations.py: 18 warnings
tests/test_dice_interface/test_dice_KD.py: 28 warnings
tests/test_dice.py: 1 warning
tests/test_dice_interface/test_explainer_base.py: 91 warnings
  /apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator ColumnTransformer from version 1.1.1 when using version 1.1.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
  https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
    warnings.warn(

tests/test_counterfactual_explanations.py: 18 warnings
tests/test_dice_interface/test_dice_KD.py: 20 warnings
tests/test_dice.py: 1 warning
tests/test_dice_interface/test_explainer_base.py: 76 warnings
  /apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator DecisionTreeClassifier from version 1.1.1 when using version 1.1.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
  https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
    warnings.warn(

tests/test_counterfactual_explanations.py: 18 warnings
tests/test_dice_interface/test_dice_KD.py: 20 warnings
tests/test_dice.py: 1 warning
tests/test_dice_interface/test_explainer_base.py: 76 warnings
  /apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator RandomForestClassifier from version 1.1.1 when using version 1.1.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
  https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
    warnings.warn(

tests/test_dice_interface/test_dice_KD.py: 8 warnings
tests/test_dice_interface/test_explainer_base.py: 15 warnings
  /apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator DecisionTreeRegressor from version 1.1.1 when using version 1.1.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
  https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
    warnings.warn(

tests/test_dice_interface/test_dice_KD.py: 8 warnings
tests/test_dice_interface/test_explainer_base.py: 15 warnings
  /apps/gent/RHEL8/cascadelake-ib/software/scikit-learn/1.1.2-foss-2022a/lib/python3.10/site-packages/sklearn/base.py:329: UserWarning: Trying to unpickle estimator RandomForestRegressor from version 1.1.1 when using version 1.1.2. This might lead to breaking code or invalid results. Use at your own risk. For more info please refer to:
  https://scikit-learn.org/stable/model_persistence.html#security-maintainability-limitations
    warnings.warn(

tests/test_dice_interface/test_dice_tensorflow.py::TestDiceTensorFlowMethods::test_yloss[hinge_loss-4.6711]
  /tmp/vsc43810/easybuild/build/diceml/0.9/foss-2022a/diceml/dice_ml-0.9/dice_ml/utils/helpers.py:25: ConversionWarning: Some errors were detected !
      Line #5918 (got 6 columns instead of 15)
    raw_data = np.genfromtxt('https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data',

tests/test_model_interface/test_keras_tensorflow_model.py::test_model_initiation_fullpath
  /tmp/vsc43810/easybuild/build/diceml/0.9/foss-2022a/diceml/dice_ml-0.9/dice_ml/model.py:34: UserWarning: {'model': 'keras_tensorflow_model.KerasTensorFlowModel', 'explainer': 'dice_tensorflow2.DiceTensorFlow2'} backend not in supported backends sklearn,TF1,TF2,PYT
    warnings.warn('{0} backend not in supported backends {1}'.format(

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=============================================================================== short test summary info ===============================================================================
FAILED tests/test_counterfactual_explanations.py::TestSerializationCounterfactualExplanations::test_summary_importance_output[0-10-1.0] - AttributeError: 'SimpleImputer' object has...
FAILED tests/test_counterfactual_explanations.py::TestSerializationCounterfactualExplanations::test_local_importance_output[0-10-2.0] - AttributeError: 'SimpleImputer' object has n...
FAILED tests/test_counterfactual_explanations.py::TestSerializationCounterfactualExplanations::test_counterfactual_explanations_output[0-2-1.0] - AttributeError: 'SimpleImputer' ob...
FAILED tests/test_counterfactual_explanations.py::TestSerializationCounterfactualExplanations::test_local_importance_output[0-10-1.0] - AttributeError: 'SimpleImputer' object has n...
FAILED tests/test_counterfactual_explanations.py::TestSerializationCounterfactualExplanations::test_counterfactual_explanations_output[0-2-2.0] - AttributeError: 'SimpleImputer' ob...
FAILED tests/test_counterfactual_explanations.py::TestSerializationCounterfactualExplanations::test_summary_importance_output[0-10-2.0] - AttributeError: 'SimpleImputer' object has...
FAILED tests/test_counterfactual_explanations.py::TestSerializationCounterfactualExplanations::test_no_counterfactuals_found[0-2-1.0] - AttributeError: 'SimpleImputer' object has n...
FAILED tests/test_counterfactual_explanations.py::TestSerializationCounterfactualExplanations::test_no_counterfactuals_found[0-2-2.0] - AttributeError: 'SimpleImputer' object has n...
FAILED tests/test_counterfactual_explanations.py::TestSerializationCounterfactualExplanations::test_no_counterfactuals_found_local_importance[0-10-2.0] - AttributeError: 'SimpleImp...
FAILED tests/test_counterfactual_explanations.py::TestSerializationCounterfactualExplanations::test_no_counterfactuals_found_summary_importance[0-10-1.0] - AttributeError: 'SimpleI...
FAILED tests/test_counterfactual_explanations.py::TestSerializationCounterfactualExplanations::test_no_counterfactuals_found_local_importance[0-10-1.0] - AttributeError: 'SimpleImp...
FAILED tests/test_counterfactual_explanations.py::TestSerializationCounterfactualExplanations::test_no_counterfactuals_found_summary_importance[0-10-2.0] - AttributeError: 'SimpleI...
FAILED tests/test_dice.py::TestBaseExplainerLoader::test_tf - FileNotFoundError: [Errno 2] No such file or directory: 'machine-learning-databases'
FAILED tests/test_dice_interface/test_dice_KD.py::TestDiceKDRegressionMethods::test_KD_tree_output[linear-1.0-desired_range0-6] - AttributeError: 'SimpleImputer' object has no attr...
FAILED tests/test_dice_interface/test_dice_KD.py::TestDiceKDRegressionMethods::test_KD_tree_output[binary-2.0-desired_range0-6] - AttributeError: 'SimpleImputer' object has no attr...
FAILED tests/test_dice_interface/test_dice_KD.py::TestDiceKDRegressionMethods::test_KD_tree_output[binary-1.0-desired_range0-6] - AttributeError: 'SimpleImputer' object has no attr...
FAILED tests/test_dice_interface/test_dice_KD.py::TestDiceKDRegressionMethods::test_KD_tree_output[None-2.0-desired_range0-6] - AttributeError: 'SimpleImputer' object has no attrib...
FAILED tests/test_dice.py::TestBaseExplainerLoader::test_unsupported_sampling_strategy - FileNotFoundError: [Errno 2] No such file or directory: '/tmp/vsc43810/easybuild/build/dice...
FAILED tests/test_dice.py::TestBaseExplainerLoader::test_minimum_query_instances - FileNotFoundError: [Errno 2] No such file or directory: '/tmp/vsc43810/easybuild/build/diceml/0.9...
FAILED tests/test_data_interface/test_public_data_interface.py::TestUserDataCorruption::test_user_data_corruption - FileNotFoundError: [Errno 2] No such file or directory: '/tmp/vs...
FAILED tests/test_dice_interface/test_dice_KD.py::TestDiceKDRegressionMethods::test_KD_tree_output[None-1.0-desired_range0-6] - AttributeError: 'SimpleImputer' object has no attrib...
FAILED tests/test_dice_interface/test_dice_KD.py::TestDiceKDRegressionMethods::test_KD_tree_output[linear-2.0-desired_range0-6] - AttributeError: 'SimpleImputer' object has no attr...
FAILED tests/test_dice_interface/test_dice_KD.py::TestDiceKDRegressionMethods::test_KD_tree_counterfactual_explanations_output[desired_range0-6] - AttributeError: 'SimpleImputer' o...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseBinaryClassification::test_local_feature_importance[1-random] - AttributeError: 'SimpleImputer' object has...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseBinaryClassification::test_global_feature_importance[1-kdtree] - AttributeError: 'SimpleImputer' object ha...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseBinaryClassification::test_incorrect_features_permitted_range[1-kdtree] - AttributeError: 'SimpleImputer' ...
FAILED tests/test_dice_interface/test_dice_KD.py::TestDiceKDRegressionMethods::test_zero_cfs[0-desired_range0-0] - AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseBinaryClassification::test_incorrect_features_to_vary_list[1-kdtree] - AttributeError: 'SimpleImputer' obj...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseBinaryClassification::test_query_instance_unknown_column[1-kdtree] - AttributeError: 'SimpleImputer' objec...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseBinaryClassification::test_unsupported_binary_class[100-kdtree] - AttributeError: 'SimpleImputer' object h...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseBinaryClassification::test_local_feature_importance[1-genetic] - AttributeError: 'SimpleImputer' object ha...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseBinaryClassification::test_query_instance_outside_bounds[1-kdtree] - AttributeError: 'SimpleImputer' objec...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseBinaryClassification::test_unsupported_binary_class[a-random] - AttributeError: 'SimpleImputer' object has...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseBinaryClassification::test_local_feature_importance[1-kdtree] - AttributeError: 'SimpleImputer' object has...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseBinaryClassification::test_desired_class[1-random] - AttributeError: 'SimpleImputer' object has no attribu...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseBinaryClassification::test_permitted_range[1-1-permitted_range0-random] - AttributeError: 'SimpleImputer' ...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseBinaryClassification::test_global_feature_importance[1-random] - AttributeError: 'SimpleImputer' object ha...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseBinaryClassification::test_zero_cfs_internal[all-0-None-0-None-random] - AttributeError: 'SimpleImputer' o...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseBinaryClassification::test_unsupported_binary_class[a-genetic] - AttributeError: 'SimpleImputer' object ha...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseBinaryClassification::test_desired_class[1-genetic] - AttributeError: 'SimpleImputer' object has no attrib...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseBinaryClassification::test_permitted_range[1-1-permitted_range0-genetic] - AttributeError: 'SimpleImputer'...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseBinaryClassification::test_zero_cfs_internal[all-0-None-0-None-kdtree] - AttributeError: 'SimpleImputer' o...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseBinaryClassification::test_unsupported_binary_class[a-kdtree] - AttributeError: 'SimpleImputer' object has...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseBinaryClassification::test_desired_class[1-kdtree] - AttributeError: 'SimpleImputer' object has no attribu...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseBinaryClassification::test_global_feature_importance[1-genetic] - AttributeError: 'SimpleImputer' object h...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseBinaryClassification::test_permitted_range[1-1-permitted_range0-kdtree] - AttributeError: 'SimpleImputer' ...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseMultiClassClassification::test_desired_class[kdtree-2-2-genetic] - AttributeError: 'SimpleImputer' object ...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseMultiClassClassification::test_desired_class[random-2-2-random] - AttributeError: 'SimpleImputer' object h...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseMultiClassClassification::test_unsupported_multiclass[100-3-genetic] - AttributeError: 'SimpleImputer' obj...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseMultiClassClassification::test_desired_class[random-2-2-kdtree] - AttributeError: 'SimpleImputer' object h...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseMultiClassClassification::test_zero_totalcfs[1-kdtree] - AttributeError: 'SimpleImputer' object has no att...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseMultiClassClassification::test_desired_class[kdtree-2-2-kdtree] - AttributeError: 'SimpleImputer' object h...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseMultiClassClassification::test_unsupported_multiclass[100-3-kdtree] - AttributeError: 'SimpleImputer' obje...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseMultiClassClassification::test_desired_class[kdtree-2-2-random] - AttributeError: 'SimpleImputer' object h...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseMultiClassClassification::test_desired_class[random-2-2-genetic] - AttributeError: 'SimpleImputer' object ...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseMultiClassClassification::test_unsupported_multiclass[100-3-random] - AttributeError: 'SimpleImputer' obje...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseMultiClassClassification::test_unsupported_multiclass[opposite-3-random] - AttributeError: 'SimpleImputer'...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseUserConfigValidations::test_generate_counterfactuals_user_config_validations[generate_counterfactuals-kdtree]
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseMultiClassClassification::test_unsupported_multiclass[opposite-3-kdtree] - AttributeError: 'SimpleImputer'...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseMultiClassClassification::test_zero_cfs_internal[all-0-None-0-None-kdtree] - AttributeError: 'SimpleImpute...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseBinaryClassification::test_incorrect_values_permitted_range[1-kdtree] - AttributeError: 'SimpleImputer' ob...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseMultiClassClassification::test_unsupported_multiclass[opposite-3-genetic] - AttributeError: 'SimpleImputer...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseMultiClassClassification::test_zero_cfs_internal[all-0-None-0-None-random] - AttributeError: 'SimpleImpute...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseUserConfigValidations::test_generate_counterfactuals_user_config_validations[global_feature_importance-kdtree]
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseUserConfigValidations::test_generate_counterfactuals_user_config_validations[local_feature_importance-kdtree]
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseBinaryClassification::test_unsupported_binary_class[100-random] - AttributeError: 'SimpleImputer' object h...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseUserConfigValidations::test_generate_counterfactuals_user_config_validations[feature_importance-kdtree] - ...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseDataValidations::test_local_feature_importance_error_conditions_with_insufficient_cfs_per_query_point[genetic]
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseDataValidations::test_global_feature_importance_error_conditions_with_insufficient_query_points[random] - ...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseDataValidations::test_global_feature_importance_error_conditions_with_insufficient_query_points[genetic]
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseDataValidations::test_global_feature_importance_error_conditions_with_insufficient_cfs_per_query_point[genetic]
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseDataValidations::test_local_feature_importance_error_conditions_with_insufficient_cfs_per_query_point[kdtree]
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseBinaryClassification::test_unsupported_binary_class[100-genetic] - AttributeError: 'SimpleImputer' object ...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseDataValidations::test_global_feature_importance_error_conditions_with_insufficient_query_points[kdtree] - ...
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseDataValidations::test_global_feature_importance_error_conditions_with_insufficient_cfs_per_query_point[random]
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseDataValidations::test_global_feature_importance_error_conditions_with_insufficient_cfs_per_query_point[kdtree]
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseDataValidations::test_local_feature_importance_error_conditions_with_insufficient_cfs_per_query_point[random]
FAILED tests/test_dice_interface/test_explainer_base.py::TestExplainerBaseBinaryClassification::test_check_any_counterfactuals_computed[kdtree] - AttributeError: 'SimpleImputer' ob...
ERROR tests/test_notebooks.py
ERROR tests/test_dice_interface/test_dice_genetic.py
ERROR tests/test_dice_interface/test_dice_random.py
ERROR tests/test_dice_interface/test_dice_KD.py::TestDiceKDBinaryClassificationMethods::test_KD_tree_counterfactual_explanations_output[0-1] - AttributeError: 'SimpleImputer' objec...
ERROR tests/test_dice_interface/test_dice_KD.py::TestDiceKDBinaryClassificationMethods::test_features_to_vary[0-1-features_to_vary0] - AttributeError: 'SimpleImputer' object has no...
ERROR tests/test_dice_interface/test_dice_KD.py::TestDiceKDBinaryClassificationMethods::test_permitted_range[0-1-permitted_range0] - AttributeError: 'SimpleImputer' object has no a...
ERROR tests/test_dice_interface/test_dice_KD.py::TestDiceKDBinaryClassificationMethods::test_permitted_range_categorical[0-4-permitted_range0] - AttributeError: 'SimpleImputer' obj...
ERROR tests/test_dice_interface/test_dice_KD.py::TestDiceKDBinaryClassificationMethods::test_duplicates[0-2] - AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'
ERROR tests/test_dice_interface/test_dice_KD.py::TestDiceKDBinaryClassificationMethods::test_index[linear-0-1] - AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'
ERROR tests/test_dice_interface/test_dice_KD.py::TestDiceKDBinaryVarsClassificationMethods::test_KD_tree_output[None-0-1] - AttributeError: 'SimpleImputer' object has no attribute ...
ERROR tests/test_dice_interface/test_dice_KD.py::TestDiceKDBinaryClassificationMethods::test_index[binary-0-1] - AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'
ERROR tests/test_dice_interface/test_dice_KD.py::TestDiceKDBinaryClassificationMethods::test_index[None-0-1] - AttributeError: 'SimpleImputer' object has no attribute '_fit_dtype'
ERROR tests/test_dice_interface/test_dice_KD.py::TestDiceKDBinaryVarsClassificationMethods::test_KD_tree_counterfactual_explanations_output[0-1] - AttributeError: 'SimpleImputer' o...
ERROR tests/test_dice_interface/test_dice_KD.py::TestDiceKDMultiClassificationMethods::test_KD_tree_output[linear-2-3] - AttributeError: 'SimpleImputer' object has no attribute '_f...
ERROR tests/test_data_interface/test_public_data_interface.py::TestPublicDataMethods::test_feature_precision - FileNotFoundError: [Errno 2] No such file or directory: '/tmp/vsc4381...
ERROR tests/test_dice_interface/test_dice_KD.py::TestDiceKDMultiClassificationMethods::test_KD_tree_output[binary-2-3] - AttributeError: 'SimpleImputer' object has no attribute '_f...
ERROR tests/test_dice_interface/test_dice_KD.py::TestDiceKDMultiClassificationMethods::test_KD_tree_output[None-2-3] - AttributeError: 'SimpleImputer' object has no attribute '_fit...
ERROR tests/test_data_interface/test_public_data_interface.py::TestPublicDataMethods::test_permitted_range - FileNotFoundError: [Errno 2] No such file or directory: '/tmp/vsc43810/...
ERROR tests/test_dice_interface/test_dice_KD.py::TestDiceKDBinaryClassificationMethods::test_invalid_query_instance[None-0-4-features_to_vary0-permitted_range0] - AttributeError: '...
ERROR tests/test_dice_interface/test_dice_KD.py::TestDiceKDBinaryClassificationMethods::test_KD_tree_output[linear-0-1] - AttributeError: 'SimpleImputer' object has no attribute '_...
ERROR tests/test_dice_interface/test_dice_KD.py::TestDiceKDBinaryClassificationMethods::test_KD_tree_output[binary-0-1] - AttributeError: 'SimpleImputer' object has no attribute '_...
ERROR tests/test_dice_interface/test_dice_KD.py::TestDiceKDBinaryVarsClassificationMethods::test_invalid_query_instance[None-0-4-features_to_vary0-permitted_range0] - AttributeErro...
ERROR tests/test_dice_interface/test_dice_KD.py::TestDiceKDBinaryClassificationMethods::test_KD_tree_output[None-0-1] - AttributeError: 'SimpleImputer' object has no attribute '_fi...
ERROR tests/test_dice_interface/test_dice_KD.py::TestDiceKDBinaryVarsClassificationMethods::test_KD_tree_output[linear-0-1] - AttributeError: 'SimpleImputer' object has no attribut...
ERROR tests/test_dice_interface/test_dice_KD.py::TestDiceKDBinaryVarsClassificationMethods::test_KD_tree_output[binary-0-1] - AttributeError: 'SimpleImputer' object has no attribut...
==================================================== 78 failed, 94 passed, 6 skipped, 966 warnings, 25 errors in 146.71s (0:02:26) ====================================================
