# patch to avoid problems on systems using glibc 2.28 (or newer)
--- lib/fseterr.c.orig	2023-04-22 18:40:40.924629000 +0200
+++ lib/fseterr.c	2023-04-22 18:41:35.285627000 +0200
@@ -38,8 +38,8 @@
   /* Most systems provide FILE as a struct and the necessary bitmask in
      <stdio.h>, because they need it for implementing getc() and putc() as
      fast macros.  */
-#if defined _IO_ftrylockfile || __GNU_LIBRARY__ == 1 /* GNU libc, BeOS, Haiku, Linux libc5 */
-  fp->_flags |= _IO_ERR_SEEN;
+#if defined _IO_EOF_SEEN || __GNU_LIBRARY__ == 1 /* GNU libc, BeOS, Haiku, Linux libc5 */
+      	fp->_flags |= _IO_ERR_SEEN;
 #elif defined __sferror || defined __DragonFly__ || defined __ANDROID__
   /* FreeBSD, NetBSD, OpenBSD, DragonFly, Mac OS X, Cygwin, Android */
   fp_->_flags |= __SERR;
--- lib/stdio-impl.h.orig	2023-04-22 18:41:49.735681000 +0200
+++ lib/stdio-impl.h	2023-04-22 18:42:29.234634000 +0200
@@ -28,6 +28,13 @@
    have different naming conventions, or their access requires some casts.  */
 
 
+/* Glibc 2.28 made _IO_IN_BACKUP private.  For now, work around this
+   problem by defining it ourselves.  FIXME: Do not rely on glibc
+   internals.  */
+#if !defined _IO_IN_BACKUP && defined _IO_EOF_SEEN
+# define _IO_IN_BACKUP 0x100
+#endif
+
 /* BSD stdio derived implementations.  */
 
 #if defined __NetBSD__                         /* NetBSD */
