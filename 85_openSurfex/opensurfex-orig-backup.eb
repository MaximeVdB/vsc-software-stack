easyblock = 'ConfigureMake'

name = 'OPEN-SURFEX'
version = '9.0.0'

homepage = 'https://www.umr-cnrm.fr/surfex/spip.php?rubrique141'
description = """
SURFEX (SURFace EXternalisée) is a modelling platform that parametrizes land and water surfaces.
SURFEX is being developed by Météo-France and Open-SURFEX is a freely available SURFEX version
released under terms of CECILL-C Licence.
"""

toolchain = {'name': 'foss', 'version': '2022a'}
# toolchainopts = {'usempi': True, 'openmp': True, 'pic': True}

source_urls = ['https://www.umr-cnrm.fr/surfex/data/OPEN-SURFEX/']
sources = ['open_surfex_v%(version)s.tar.gz']

builddependencies = [
    ('CMake', '3.23.1'),
]
dependencies = [
    ('Python', '3.10.4'),
    ('netCDF', '4.9.0'),
    ('netCDF-Fortran', '4.6.0'),
    ('HDF5', '1.12.2'),
    ('cURL', '7.83.0'),
    ('Szip', '2.1.1'),
    ('zlib', '1.2.12'),
    ('M4', '1.4.19'),
    # ('grib_api', '1.24.0'),  # conflicting versions of Jasper (conflict with ecCodes)
    ('ecCodes', '2.27.0'),
]

# # Needed due to changes in GCC10.
# configopts = 'FCFLAGS="-fallow-argument-mismatch -ffree-line-length-none $FCFLAGS" '
# configopts += 'FFLAGS="-fallow-argument-mismatch $FFLAGS" '

# # Ensure MPI
# configopts += '--with-mpi="yes" '

# # Enable OpenMP
# configopts += '--enable-openmp="yes" '

# # BLAS/Lapack from FlexiBLAS
# configopts += 'LINALG_LIBS="${LIBLAPACK_MT}" '

# # FFTW
# configopts += '--with-fft-flavor=fftw3 FFTW3_LIBS="-L${EBROOTFFTW} -lfftw3f -lfftw3" '

# # libxc support
# configopts += '--with-libxc=${EBROOTLIBXC} '

# # hdf5/netcdf4 support
# configopts += '--with-netcdf="${EBROOTNETCDF}" '
# configopts += '--with-netcdf-fortran="${EBROOTNETCDFMINFORTRAN}" '
# configopts += '--with-hdf5="${EBROOTHDF5}" '

# # Wannier90
# configopts += '--with-wannier90="${EBROOTWANNIER90}" '
# preconfigopts = 'export WANNIER90_LIBS="-L$EBROOTWANNIER90/lib -lwannier" && '

# # Enable double precision for GW calculations
# configopts += '--enable-gw-dpc '

# # 'make check' is just executing some basic unit tests.
# # Also running 'make tests_v1' to have some basic validation
# runtest = "check && make test_v1"

# sanity_check_paths = {
#     'files': ['bin/%s' % x for x in ['abinit', 'aim', 'cut3d', 'conducti', 'mrgddb', 'mrgscr', 'optic']],
#     'dirs': ['lib/pkgconfig'],
# }

# moduleclass = 'chem'
